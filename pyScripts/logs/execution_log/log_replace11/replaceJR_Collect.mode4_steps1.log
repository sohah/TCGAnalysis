symbolic.min_int=-2147483648
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=2147483647
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
* running veritesting with SPFCases.
JavaPathfinder core system v8.0 (rev e734381a6e606354034111dc855be9a8e454ce71) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
tcgbenchmarks.replace.replace11.main()

====================================================== search started: 1/10/22 3:13 PM
---- CoverageMode = JR, solver = z3bitvector, benchmark= replace11, STEPS 1
|-|-|-|-|-|-|-|-|-|-|-|-finished obligation collection|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-
^_^ running jitAnalysis ^_^

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#12
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w99 := 0; 
w100 := 0; 
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#35
10 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w11 = w1[w10:<Primordial,C>]
if ((!= w11 63 )) {
   18 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w19 = w1[w18:<Primordial,C>]
   if ((!= w19 91 )) {
      24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w25 = w1[w24:<Primordial,C>]
      if ((! (!= w25 37 ) )) {
         27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         if ((! (!= w27 0 ) )) {
            28 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w28 10 ) )) {
               29 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w29:<Primordial,C>] = w26
               30 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w31 := (+ w30 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 31
            } else {
               skip; 
            }
         } else {
            32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w32 10 ) )) {
               33 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w33:<Primordial,C>] = w34
               35 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w36 := (+ w35 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 36
            } else {
               skip; 
            }
            38 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @162 exception:37
            39 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w39 10 ) )) {
               40 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w40:<Primordial,C>] = w38
               41 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w42 := (+ w41 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 42
            } else {
               skip; 
            }
         }
      } else {
         43 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         w44 = w1[w43:<Primordial,C>]
         if ((!= w44 42 )) {
            62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
            w63 = w1[w62:<Primordial,C>]
            if ((!= w63 36 )) {
               82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w82 10 ) )) {
                  83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w83:<Primordial,C>] = w34
                  84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w85 := (+ w84 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
               } else {
                  skip; 
               }
               87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
               88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w88 10 ) )) {
                  89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w89:<Primordial,C>] = w87
                  90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w91 := (+ w90 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
               } else {
                  skip; 
               }
            } else {
               65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
               w66 := (+ w65 1 ); 
               w67 = w1[w66:<Primordial,C>]
               if ((! (!= w67 0 ) )) {
                  68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  if ((! (>= w68 10 ) )) {
                     69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                     w2[w69:<Primordial,C>] = w64
                     70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                     w71 := (+ w70 1 ); 
                     putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
                  } else {
                     skip; 
                  }
               } else {
                  72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  if ((! (>= w72 10 ) )) {
                     73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                     w2[w73:<Primordial,C>] = w34
                     74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                     w75 := (+ w74 1 ); 
                     putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
                  } else {
                     skip; 
                  }
                  77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
                  78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  if ((! (>= w78 10 ) )) {
                     79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                     w2[w79:<Primordial,C>] = w77
                     80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                     w81 := (+ w80 1 ); 
                     putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
                  } else {
                     skip; 
                  }
               }
            }
         } else {
            46 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
            if ((! (<= w46 0 ) )) {
               w47 = w2[w99:<Primordial,C>]
               49 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, in_set_2(C)Z > 47 @220 exception:48
               if ((! (== w49 0 ) )) {
                  skip; 
               } else {
                  invokestatic < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V > 2,99 @237 exception:50
               }
               w51 := (Gamma !(w49==0) 1 w100); 
            } else {
               52 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w52 10 ) )) {
                  53 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w53:<Primordial,C>] = w34
                  54 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w55 := (+ w54 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 55
               } else {
                  skip; 
               }
               57 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @267 exception:56
               58 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w58 10 ) )) {
                  59 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w59:<Primordial,C>] = w57
                  60 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w61 := (+ w60 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 61
               } else {
                  skip; 
               }
            }
         }
      }
   } else {
      22 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, getccl([C[C)Z > 1,2 @76 exception:21
      if ((!= w22 0 )) {
         skip; 
      } else {
         skip; 
      }
      w23 := (Gamma w22!=0 0 1); 
   }
} else {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
}
w92 := (Gamma w11!=63 (Gamma w19!=91 (Gamma !(w25!=37) (Gamma !(w27!=0) (Gamma !(w28>=10) w100 w100) w100) (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)) (Gamma !(w46<=0) w51 w100))) w23) (Gamma !(w13>=10) w100 w100)); 
w93 := (Gamma w11!=63 (Gamma w19!=91 (Gamma !(w25!=37) (Gamma !(w27!=0) (Gamma !(w28>=10) w9 w9) w9) (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)) (Gamma !(w46<=0) w99 w9))) w9) (Gamma !(w13>=10) w9 w9)); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, dodash(C[C[C)V >[93, 351, 352]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#458
if ((! (!= w92 0 ) )) {
   94 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w95 := (+ w94 1 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> > = 95
   96 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w97 = w1[w96:<Primordial,C>]
   if ((! (== w97 0 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   skip; 
}
w98 := (Gamma !(w92!=0) (Gamma !(w97==0) 1 0) 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#458
if ((! (!= w92 0 ) )) {
   94 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w95 := (+ w94 1 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> > = 95
   96 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w97 = w1[w96:<Primordial,C>]
   if ((! (== w97 0 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   skip; 
}
w98 := (Gamma !(w92!=0) (Gamma !(w97==0) 1 0) 0); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#474
96 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w97 = w1[w96:<Primordial,C>]
if ((! (== w97 0 ) )) {
   skip; 
} else {
   skip; 
}
w98 := (Gamma !(w97==0) 1 0); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#507
if ((! (== w100 0 ) )) {
   skip; 
} else {
   104 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w105 = w1[w104:<Primordial,C>]
   if ((! (== w105 0 ) )) {
      skip; 
   } else {
      skip; 
   }
}
w106 := (Gamma !(w100==0) 0 (Gamma !(w105==0) 0 w103)); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#521
104 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w105 = w1[w104:<Primordial,C>]
if ((! (== w105 0 ) )) {
   skip; 
} else {
   skip; 
}
w106 := (Gamma !(w105==0) 0 w103); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#109
29 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w30 = w1[w29:<Primordial,C>]
if ((== w30 0 )) {
   31 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((>= w31 10 )) {
      skip; 
   } else {
      32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w32:<Primordial,C>] = w4
      33 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
   }
} else {
   skip; 
}
w34 := (Gamma w30==0 (Gamma w31>=10 0 w33) 0); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (2,2)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.mainProcess(CCCCCCCCCCC)V#98
if ((! (> w30 0 ) )) {
   31 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
   invokevirtual < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V > 31,32 @106 exception:33
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w32$24]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.putsub([CII[C)V#20
w9 = w4[w18:<Primordial,C>]
if ((!= w9 65535 )) {
   13 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
   w14 = w4[w18:<Primordial,C>]
   invokevirtual < Application, Ljava/io/PrintStream, print(C)V > 13,14 @43 exception:15
} else {
   10 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
   w11 = w1[w18:<Primordial,C>]
   invokevirtual < Application, Ljava/io/PrintStream, print(C)V > 10,11 @30 exception:12
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.SPFCaseStmt value: SPFCaseStmt( MULTIPLE,0==0) seen in NoSkipVisitor

c   c   athreadTerminated: 1

The solution is {w4$20=97, w4$22=50, r-1.subParaIndex.1.3.20=3, r-1.subParaIndex.1.3.22=3, r354[1].-1.24.18=97, w13$18=1, escSub([C)C_26_TAKEN.1.3.18=1, w7$18=97, escSub([C)C_26_NOT_TAKEN.1.3.20=0, escSub([C)C_66_NOT_TAKEN.1.5.18=0, escSub([C)C_26_NOT_TAKEN.1.3.22=1, w10$21=50, escSub([C)C_26_TAKEN.1.3.20=1, w10$20=3, escSub([C)C_26_TAKEN.1.3.22=0, w10$22=4, escSub([C)C_50_NOT_TAKEN.1.9.18=0, r-1.subParaIndex.1.3.18=2, w24$20=50, escSub([C)C_66_TAKEN.1.11.18=0, w24$22=0, escSub([C)C_66_TAKEN.1.11.16=0, escSub([C)C_66_TAKEN.1.7.20=1, escSub([C)C_50_NOT_TAKEN.1.3.20=0, w9$21=3, escSub([C)C_66_TAKEN.1.7.22=0, escSub([C)C_50_NOT_TAKEN.1.3.22=0, escSub([C)C_50_TAKEN.1.7.16=0, w4$18=97, escSub([C)C_50_TAKEN.1.7.18=0, escSub([C)C_50_TAKEN.1.7.20=0, makesub([C[C)I_23_NOT_TAKEN.1.3.18=0, w13$22=3, escSub([C)C_50_TAKEN.1.7.22=0, makesub([C[C)I_23_NOT_TAKEN.1.3.16=1, w13$20=2, w16$18=97, escSub([C)C_66_TAKEN.1.7.18=1, escSub([C)C_66_TAKEN.1.9.16=0, escSub([C)C_66_TAKEN.1.9.18=0, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, escSub([C)C_66_NOT_TAKEN.1.7.20=0, makepat([C[C)I_474_TAKEN.1.5.9=0, escSub([C)C_66_NOT_TAKEN.1.7.22=0, makesub([C[C)I_23_NOT_TAKEN.1.3.20=0, w98$9=1, escSub([C)C_50_TAKEN.1.3.20=1, escSub([C)C_50_TAKEN.1.3.22=1, escSub([C)C_66_NOT_TAKEN.1.3.18=0, makesub([C[C)I_64_NOT_TAKEN.1.5.16=0, escSub([C)C_26_TAKEN.1.5.22=0, makesub([C[C)I_23_NOT_TAKEN.1.3.22=0, escSub([C)C_50_NOT_TAKEN.1.7.18=0, makesub([C[C)I_64_NOT_TAKEN.1.5.18=1, escSub([C)C_26_TAKEN.1.5.20=0, w24$18=97, escSub([C)C_50_NOT_TAKEN.1.9.22=0, w7$22=50, w7$20=97, r-1.subParaIndex.1.7.18=1, escSub([C)C_66_TAKEN.1.9.22=0, r-1.subParaIndex.1.7.16=0, makesub([C[C)I_7_TAKEN.1.3.14=0, i2_3_SYMINT=38, escSub([C)C_50_TAKEN.1.9.18=0, escSub([C)C_66_TAKEN.1.9.20=0, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_TAKEN.1.9.16=0, escSub([C)C_50_NOT_TAKEN.1.9.20=0, w10$18=2, makesub([C[C)I_64_NOT_TAKEN.1.5.20=1, w10$17=97, w10$19=97, escSub([C)C_26_TAKEN.1.5.16=0, escSub([C)C_26_TAKEN.1.5.18=0, escSub([C)C_50_TAKEN.1.9.22=0, makesub([C[C)I_64_NOT_TAKEN.1.5.22=1, escSub([C)C_50_TAKEN.1.9.20=0, escSub([C)C_66_NOT_TAKEN.1.5.22=0, escSub([C)C_66_NOT_TAKEN.1.5.20=0, escSub([C)C_26_NOT_TAKEN.1.7.18=0, r-1.subParaIndex.1.7.22=3, escSub([C)C_66_NOT_TAKEN.1.9.20=0, escSub([C)C_66_NOT_TAKEN.1.9.22=0, w8$22=3, escSub([C)C_7_NOT_TAKEN.1.3.16=1, w8$20=2, escSub([C)C_7_NOT_TAKEN.1.3.18=1, r354[3].-1.26.22=50, escSub([C)C_66_NOT_TAKEN.1.11.18=0, w3$18=1, r-1.subParaIndex.1.7.20=2, escSub([C)C_50_TAKEN.1.5.22=0, makesub([C[C)I_34_NOT_TAKEN.1.5.16=1, escSub([C)C_66_NOT_TAKEN.1.11.20=0, w14$22=4, escSub([C)C_66_NOT_TAKEN.1.11.22=0, w14$20=3, escSub([C)C_26_NOT_TAKEN.1.7.22=0, escSub([C)C_7_TAKEN.1.3.20=0, makesub([C[C)I_34_NOT_TAKEN.1.5.18=0, escSub([C)C_26_NOT_TAKEN.1.7.20=0, escSub([C)C_7_TAKEN.1.3.22=0, escSub([C)C_26_TAKEN.1.7.22=0, escSub([C)C_26_TAKEN.1.7.20=0, escSub([C)C_50_NOT_TAKEN.1.5.18=0, w8$14=1, escSub([C)C_50_NOT_TAKEN.1.7.22=0, escSub([C)C_50_NOT_TAKEN.1.7.20=0, escSub([C)C_66_TAKEN.1.3.22=1, escSub([C)C_66_TAKEN.1.3.20=1, escSub([C)C_50_TAKEN.1.3.18=1, r-1.subParaIndex.1.5.16=0, w20$22=0, makesub([C[C)I_23_TAKEN.1.3.18=1, w20$20=50, makesub([C[C)I_23_TAKEN.1.3.16=0, escSub([C)C_7_NOT_TAKEN.1.3.20=1, w8$18=1, makesub([C[C)I_34_NOT_TAKEN.1.5.22=0, escSub([C)C_66_NOT_TAKEN.1.7.18=0, escSub([C)C_7_NOT_TAKEN.1.3.22=1, makesub([C[C)I_34_NOT_TAKEN.1.5.20=0, escSub([C)C_26_TAKEN.1.7.18=0, i1_2_SYMINT=63, escSub([C)C_66_NOT_TAKEN.1.3.22=0, escSub([C)C_26_TAKEN.1.7.16=0, escSub([C)C_66_NOT_TAKEN.1.3.20=0, r354[2].-1.25.20=97, escSub([C)C_7_TAKEN.1.3.16=0, escSub([C)C_26_NOT_TAKEN.1.5.18=0, escSub([C)C_66_TAKEN.1.3.18=1, escSub([C)C_7_TAKEN.1.3.18=0, makesub([C[C)I_23_TAKEN.1.3.20=1, r-1.subParaIndex.1.5.20=2, w25$20=97, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, w6$22=3, r-1.subParaIndex.1.5.22=3, w25$22=50, w6$20=2, escSub([C)C_7_NOT_TAKEN.1.5.18=1, makesub([C[C)I_23_TAKEN.1.3.22=1, makepat([C[C)I_474_TAKEN.1.3.9=0, escSub([C)C_7_NOT_TAKEN.1.5.16=0, makesub([C[C)I_7_NOT_TAKEN.1.3.14=1, w9$19=2, w11$18=97, w9$17=1, escSub([C)C_7_TAKEN.1.5.20=0, escSub([C)C_26_NOT_TAKEN.1.5.22=0, w20$18=97, w16$22=0, escSub([C)C_7_TAKEN.1.5.22=0, escSub([C)C_26_NOT_TAKEN.1.5.20=0, w8$1=1, escSub([C)C_66_TAKEN.1.11.22=0, r-1.subParaIndex.1.5.18=1, escSub([C)C_66_TAKEN.1.11.20=0, w16$20=50, escSub([C)C_50_NOT_TAKEN.1.3.18=0, r354[0].-1.23.16=65535, escSub([C)C_66_TAKEN.1.5.20=1, w3$20=2, escSub([C)C_50_NOT_TAKEN.1.5.20=0, escSub([C)C_50_NOT_TAKEN.1.5.22=0, escSub([C)C_50_TAKEN.1.5.18=1, w25$16=38, escSub([C)C_66_TAKEN.1.5.22=1, w14$18=2, w6$18=1, escSub([C)C_66_NOT_TAKEN.1.9.18=0, w3$22=3, escSub([C)C_7_NOT_TAKEN.1.5.22=1, escSub([C)C_7_NOT_TAKEN.1.5.20=1, w11$20=50, escSub([C)C_50_TAKEN.1.5.20=1, w11$22=0, escSub([C)C_7_TAKEN.1.5.16=0, escSub([C)C_66_TAKEN.1.5.18=1, w25$18=97, escSub([C)C_26_NOT_TAKEN.1.3.18=0, escSub([C)C_7_TAKEN.1.5.18=0}
The solution is {}
        athreadTerminated: 2
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
      athreadTerminated: 3

The solution is {w24$31=50, w24$33=0, escSub([C)C_66_TAKEN.1.9.33=0, escSub([C)C_50_NOT_TAKEN.1.3.31=0, w9$32=3, escSub([C)C_50_NOT_TAKEN.1.3.33=0, escSub([C)C_66_TAKEN.1.9.31=0, escSub([C)C_50_TAKEN.1.9.33=0, escSub([C)C_50_TAKEN.1.9.31=0, r-1.subParaIndex.1.3.31=3, escSub([C)C_66_TAKEN.1.11.16=1, w6$33=3, r-1.subParaIndex.1.3.33=3, w6$31=2, escSub([C)C_50_TAKEN.1.7.16=1, escSub([C)C_26_NOT_TAKEN.1.3.31=0, escSub([C)C_26_NOT_TAKEN.1.3.33=1, w10$30=97, makesub([C[C)I_23_NOT_TAKEN.1.3.16=0, w10$32=50, escSub([C)C_26_TAKEN.1.5.33=0, w10$31=3, w10$33=4, w9$30=2, escSub([C)C_26_TAKEN.1.5.31=0, escSub([C)C_66_TAKEN.1.9.16=1, escSub([C)C_50_NOT_TAKEN.1.9.33=0, w7$33=50, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, escSub([C)C_66_TAKEN.1.3.33=1, w7$31=97, makepat([C[C)I_474_TAKEN.1.5.9=0, escSub([C)C_66_TAKEN.1.3.31=1, w98$9=1, escSub([C)C_50_NOT_TAKEN.1.9.31=0, r354[1].-1.24.31=97, makesub([C[C)I_64_NOT_TAKEN.1.5.16=1, escSub([C)C_66_NOT_TAKEN.1.5.33=0, escSub([C)C_66_NOT_TAKEN.1.5.31=0, w4$31=97, w4$33=50, escSub([C)C_66_NOT_TAKEN.1.7.31=0, escSub([C)C_66_NOT_TAKEN.1.7.33=0, r-1.subParaIndex.1.7.16=1, makesub([C[C)I_7_TAKEN.1.3.14=0, i2_3_SYMINT=64, escSub([C)C_50_TAKEN.1.9.16=1, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_TAKEN.1.3.31=1, escSub([C)C_50_TAKEN.1.3.33=1, escSub([C)C_66_NOT_TAKEN.1.11.31=0, escSub([C)C_26_TAKEN.1.5.16=1, escSub([C)C_66_NOT_TAKEN.1.11.33=0, escSub([C)C_7_TAKEN.1.3.31=0, escSub([C)C_7_TAKEN.1.3.33=0, escSub([C)C_26_TAKEN.1.7.33=0, escSub([C)C_26_TAKEN.1.7.31=0, escSub([C)C_50_NOT_TAKEN.1.7.33=0, escSub([C)C_66_TAKEN.1.5.31=1, escSub([C)C_50_NOT_TAKEN.1.7.31=0, escSub([C)C_7_NOT_TAKEN.1.3.16=0, escSub([C)C_66_TAKEN.1.5.33=1, w20$33=0, w20$31=50, makesub([C[C)I_34_NOT_TAKEN.1.5.16=0, w11$31=50, escSub([C)C_50_TAKEN.1.5.31=1, escSub([C)C_66_NOT_TAKEN.1.3.33=0, r354[2].-1.25.33=50, escSub([C)C_66_NOT_TAKEN.1.3.31=0, w11$33=0, w8$14=1, w25$31=97, r-1.subParaIndex.1.7.33=3, escSub([C)C_66_NOT_TAKEN.1.9.31=0, w25$33=50, escSub([C)C_66_NOT_TAKEN.1.9.33=0, r-1.subParaIndex.1.5.16=1, makesub([C[C)I_23_TAKEN.1.3.16=1, r-1.subParaIndex.1.7.31=2, escSub([C)C_50_TAKEN.1.5.33=0, escSub([C)C_7_TAKEN.1.5.31=0, w14$33=4, w14$31=3, i1_2_SYMINT=63, escSub([C)C_26_NOT_TAKEN.1.7.33=0, escSub([C)C_26_TAKEN.1.7.16=1, escSub([C)C_26_NOT_TAKEN.1.7.31=0, escSub([C)C_7_TAKEN.1.5.33=0, escSub([C)C_7_TAKEN.1.3.16=1, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, w3$31=2, escSub([C)C_50_NOT_TAKEN.1.5.31=0, i0_1_SYMINT=63, escSub([C)C_50_NOT_TAKEN.1.5.33=0, escSub([C)C_66_TAKEN.1.7.31=1, escSub([C)C_66_TAKEN.1.7.33=0, makepat([C[C)I_474_TAKEN.1.3.9=0, escSub([C)C_7_NOT_TAKEN.1.5.16=0, makesub([C[C)I_7_NOT_TAKEN.1.3.14=1, w3$33=3, escSub([C)C_50_TAKEN.1.7.31=0, w13$33=3, escSub([C)C_50_TAKEN.1.7.33=0, w13$31=2, w8$1=1, r354[0].-1.23.16=97, r-1.subParaIndex.1.5.31=2, r-1.subParaIndex.1.5.33=3, w8$33=3, w25$16=97, w8$31=2, escSub([C)C_26_NOT_TAKEN.1.5.33=0, w16$33=0, escSub([C)C_26_TAKEN.1.3.31=1, escSub([C)C_26_TAKEN.1.3.33=0, escSub([C)C_26_NOT_TAKEN.1.5.31=0, escSub([C)C_66_TAKEN.1.11.33=0, escSub([C)C_7_TAKEN.1.5.16=1, escSub([C)C_66_TAKEN.1.11.31=0, w16$31=50}
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
athreadTerminated: 4

The solution is {w8$14=0, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, makepat([C[C)I_474_TAKEN.1.5.9=0, makepat([C[C)I_474_TAKEN.1.3.9=0, makesub([C[C)I_7_TAKEN.1.3.14=1, i2_3_SYMINT=0, makesub([C[C)I_7_NOT_TAKEN.1.3.14=0, w98$9=1, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, i1_2_SYMINT=63, w8$1=1}
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#71
18 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w19 = w1[w18:<Primordial,C>]
if ((!= w19 91 )) {
   24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w25 = w1[w24:<Primordial,C>]
   if ((! (!= w25 37 ) )) {
      27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      if ((! (!= w27 0 ) )) {
         28 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w28 10 ) )) {
            29 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w29:<Primordial,C>] = w26
            30 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w31 := (+ w30 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 31
         } else {
            skip; 
         }
      } else {
         32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w32 10 ) )) {
            33 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w33:<Primordial,C>] = w34
            35 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w36 := (+ w35 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 36
         } else {
            skip; 
         }
         38 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @162 exception:37
         39 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w39 10 ) )) {
            40 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w40:<Primordial,C>] = w38
            41 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w42 := (+ w41 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 42
         } else {
            skip; 
         }
      }
   } else {
      43 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w44 = w1[w43:<Primordial,C>]
      if ((!= w44 42 )) {
         62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         w63 = w1[w62:<Primordial,C>]
         if ((!= w63 36 )) {
            82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w82 10 ) )) {
               83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w83:<Primordial,C>] = w34
               84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w85 := (+ w84 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
            } else {
               skip; 
            }
            87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
            88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w88 10 ) )) {
               89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w89:<Primordial,C>] = w87
               90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w91 := (+ w90 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
            } else {
               skip; 
            }
         } else {
            65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
            w66 := (+ w65 1 ); 
            w67 = w1[w66:<Primordial,C>]
            if ((! (!= w67 0 ) )) {
               68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w68 10 ) )) {
                  69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w69:<Primordial,C>] = w64
                  70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w71 := (+ w70 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
               } else {
                  skip; 
               }
            } else {
               72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w72 10 ) )) {
                  73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w73:<Primordial,C>] = w34
                  74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w75 := (+ w74 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
               } else {
                  skip; 
               }
               77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
               78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               if ((! (>= w78 10 ) )) {
                  79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w2[w79:<Primordial,C>] = w77
                  80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
                  w81 := (+ w80 1 ); 
                  putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
               } else {
                  skip; 
               }
            }
         }
      } else {
         46 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         if ((! (<= w46 0 ) )) {
            w47 = w2[w99:<Primordial,C>]
            49 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, in_set_2(C)Z > 47 @220 exception:48
            if ((! (== w49 0 ) )) {
               skip; 
            } else {
               invokestatic < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V > 2,99 @237 exception:50
            }
            w51 := (Gamma !(w49==0) 1 w100); 
         } else {
            52 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w52 10 ) )) {
               53 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w53:<Primordial,C>] = w34
               54 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w55 := (+ w54 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 55
            } else {
               skip; 
            }
            57 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @267 exception:56
            58 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w58 10 ) )) {
               59 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w59:<Primordial,C>] = w57
               60 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w61 := (+ w60 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 61
            } else {
               skip; 
            }
         }
      }
   }
} else {
   22 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, getccl([C[C)Z > 1,2 @76 exception:21
   if ((!= w22 0 )) {
      skip; 
   } else {
      skip; 
   }
   w23 := (Gamma w22!=0 0 1); 
}
w92 := (Gamma w19!=91 (Gamma !(w25!=37) (Gamma !(w27!=0) (Gamma !(w28>=10) w100 w100) w100) (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)) (Gamma !(w46<=0) w51 w100))) w23); 
w93 := (Gamma w19!=91 (Gamma !(w25!=37) (Gamma !(w27!=0) (Gamma !(w28>=10) w9 w9) w9) (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)) (Gamma !(w46<=0) w99 w9))) w9); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V >[352, 0]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.getccl([C[C)Z#15
7 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w8 = w1[w7:<Primordial,C>]
if ((! (!= w8 94 ) )) {
   10 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w10 10 ) )) {
      12 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w12:<Primordial,C>] = w13
      14 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w15 := (+ w14 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 15
   } else {
      skip; 
   }
   16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w17 := (+ w16 1 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> > = 17
} else {
   18 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w18 10 ) )) {
      19 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w19:<Primordial,C>] = w20
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w22 := (+ w21 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 22
   } else {
      skip; 
   }
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.dodash(C[C[C)V#8
6 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w7 = w2[w6:<Primordial,C>]
if ((! (== w7 w1 ) )) {
   8 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w9 = w2[w8:<Primordial,C>]
   if ((! (== w9 0 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   skip; 
}
w11 := (Gamma !(w7==w1) (Gamma !(w9==0) 1 0) 0); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.dodash(C[C[C)V#16
8 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w9 = w2[w8:<Primordial,C>]
if ((! (== w9 0 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w9==0) 1 0); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.getccl([C[C)Z#128
35 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w36 = w1[w35:<Primordial,C>]
if ((! (!= w36 93 ) )) {
   return 5
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)

Challege: illegal pattern!
threadTerminated: 5
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#103
24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w25 = w1[w24:<Primordial,C>]
if ((! (!= w25 37 ) )) {
   27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   if ((! (!= w27 0 ) )) {
      28 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w28 10 ) )) {
         29 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w29:<Primordial,C>] = w26
         30 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w31 := (+ w30 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 31
      } else {
         skip; 
      }
   } else {
      32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w32 10 ) )) {
         33 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w33:<Primordial,C>] = w34
         35 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w36 := (+ w35 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 36
      } else {
         skip; 
      }
      38 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @162 exception:37
      39 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w39 10 ) )) {
         40 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w40:<Primordial,C>] = w38
         41 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w42 := (+ w41 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 42
      } else {
         skip; 
      }
   }
} else {
   43 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w44 = w1[w43:<Primordial,C>]
   if ((!= w44 42 )) {
      62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w63 = w1[w62:<Primordial,C>]
      if ((!= w63 36 )) {
         82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w82 10 ) )) {
            83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w83:<Primordial,C>] = w34
            84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w85 := (+ w84 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
         } else {
            skip; 
         }
         87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
         88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w88 10 ) )) {
            89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w89:<Primordial,C>] = w87
            90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w91 := (+ w90 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
         } else {
            skip; 
         }
      } else {
         65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         w66 := (+ w65 1 ); 
         w67 = w1[w66:<Primordial,C>]
         if ((! (!= w67 0 ) )) {
            68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w68 10 ) )) {
               69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w69:<Primordial,C>] = w64
               70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w71 := (+ w70 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
            } else {
               skip; 
            }
         } else {
            72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w72 10 ) )) {
               73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w73:<Primordial,C>] = w34
               74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w75 := (+ w74 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
            } else {
               skip; 
            }
            77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
            78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            if ((! (>= w78 10 ) )) {
               79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w2[w79:<Primordial,C>] = w77
               80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
               w81 := (+ w80 1 ); 
               putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
            } else {
               skip; 
            }
         }
      }
   } else {
      46 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      if ((! (<= w46 0 ) )) {
         w47 = w2[w99:<Primordial,C>]
         49 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, in_set_2(C)Z > 47 @220 exception:48
         if ((! (== w49 0 ) )) {
            skip; 
         } else {
            invokestatic < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V > 2,99 @237 exception:50
         }
         w51 := (Gamma !(w49==0) 1 w100); 
      } else {
         52 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w52 10 ) )) {
            53 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w53:<Primordial,C>] = w34
            54 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w55 := (+ w54 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 55
         } else {
            skip; 
         }
         57 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @267 exception:56
         58 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w58 10 ) )) {
            59 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w59:<Primordial,C>] = w57
            60 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w61 := (+ w60 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 61
         } else {
            skip; 
         }
      }
   }
}
w92 := (Gamma !(w25!=37) (Gamma !(w27!=0) (Gamma !(w28>=10) w100 w100) w100) (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)) (Gamma !(w46<=0) w51 w100))); 
w93 := (Gamma !(w25!=37) (Gamma !(w27!=0) (Gamma !(w28>=10) w9 w9) w9) (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)) (Gamma !(w46<=0) w99 w9))); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V >[352, 0]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.esc([C)C#7
3 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w4 = w1[w3:<Primordial,C>]
if ((! (== w4 64 ) )) {
   6 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w7 = w1[w6:<Primordial,C>]
} else {
   8 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w10 := (+ w8 1 ); 
   w11 = w1[w10:<Primordial,C>]
   if ((!= w11 0 )) {
      13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w14 := (+ w13 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> > = 14
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w16 = w1[w15:<Primordial,C>]
      if ((! (!= w16 110 ) )) {
         skip; 
      } else {
         19 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         w20 = w1[w19:<Primordial,C>]
         if ((!= w20 116 )) {
            23 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
            w24 = w1[w23:<Primordial,C>]
         } else {
            skip; 
         }
      }
   } else {
      skip; 
   }
}
w25 := (Gamma !(w4==64) w7 (Gamma w11!=0 (Gamma !(w16!=110) 10 (Gamma w20!=116 w24 9)) 64)); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.amatch([C[CI)I#231
if ((!= w44 0 )) {
   47 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, patsize([CI)I > 2,55 @246 exception:46
   w48 := (+ w55 w47 ); 
} else {
   putstatic < Application, Ltcgbenchmarks/replace/replace11, strIndex, <Primordial,I> > = 5
}
w49 := (Gamma w44!=0 w48 w55); 
w50 := w56; 
w51 := (Gamma w44!=0 w57 1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w10$64]

 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.amatch([C[CI)I#11
w7 = w2[w3:<Primordial,C>]
if ((! (== w7 0 ) )) {
   skip; 
} else {
   skip; 
}
w55 := w3; 
w56 := -1; 
w57 := 0; 
w9 := (Gamma !(w7==0) 1 0); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#10
7 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w8 = w1[w7:<Primordial,C>]
if ((!= w8 0 )) {
   w9 = w2[w3:<Primordial,C>]
   11 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, in_pat_set(C)Z > 9 @25 exception:10
   if ((!= w11 0 )) {
      w15 = w2[w3:<Primordial,C>]
      if ((! (!= w15 99 ) )) {
         17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
         w18 = w1[w17:<Primordial,C>]
         w20 := (+ w3 1 ); 
         w21 = w2[w20:<Primordial,C>]
         if ((! (!= w18 w21 ) )) {
            skip; 
         } else {
            skip; 
         }
      } else {
         w22 = w2[w3:<Primordial,C>]
         if ((! (!= w22 37 ) )) {
            24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
            if ((! (!= w24 0 ) )) {
               skip; 
            } else {
               skip; 
            }
         } else {
            w25 = w2[w3:<Primordial,C>]
            if ((! (!= w25 63 ) )) {
               27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
               w28 = w1[w27:<Primordial,C>]
               if ((! (== w28 10 ) )) {
                  skip; 
               } else {
                  skip; 
               }
            } else {
               w30 = w2[w3:<Primordial,C>]
               if ((! (!= w30 36 ) )) {
                  32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                  w33 = w1[w32:<Primordial,C>]
                  if ((! (!= w33 10 ) )) {
                     skip; 
                  } else {
                     skip; 
                  }
               } else {
                  w34 = w2[w3:<Primordial,C>]
                  if ((! (!= w34 91 ) )) {
                     w36 := (+ w3 1 ); 
                     37 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                     w38 = w1[w37:<Primordial,C>]
                     40 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 38,2,36 @166 exception:39
                     if ((! (== w40 0 ) )) {
                        skip; 
                     } else {
                        skip; 
                     }
                     w41 := (Gamma !(w40==0) 1 -1); 
                  } else {
                     w42 = w2[w3:<Primordial,C>]
                     if ((!= w42 33 )) {
                        w52 = w2[w3:<Primordial,C>]
                        invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 52 @236 exception:53
                     } else {
                        44 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                        w45 = w1[w44:<Primordial,C>]
                        if ((! (== w45 10 ) )) {
                           w46 := (+ w3 1 ); 
                           47 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                           w48 = w1[w47:<Primordial,C>]
                           50 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 48,2,46 @217 exception:49
                           if ((! (!= w50 0 ) )) {
                              skip; 
                           } else {
                              skip; 
                           }
                           w51 := (Gamma !(w50!=0) 1 -1); 
                        } else {
                           skip; 
                        }
                     }
                  }
               }
            }
         }
      }
   } else {
      12 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
      invokevirtual < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V > 12,13 @40 exception:14
   }
} else {
   skip; 
}
w54 := (Gamma w8!=0 (Gamma w11!=0 (Gamma !(w15!=99) (Gamma !(w18!=w21) 1 -1) (Gamma !(w22!=37) (Gamma !(w24!=0) 0 -1) (Gamma !(w25!=63) (Gamma !(w28==10) 1 -1) (Gamma !(w30!=36) (Gamma !(w33!=10) 0 -1) (Gamma !(w34!=91) w41 (Gamma w42!=33 -1 (Gamma !(w45==10) w51 -1))))))) -1) -1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w13$68]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#3
if ((! (!= w1 99 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#11
if ((! (!= w1 37 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#19
if ((! (!= w1 36 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#27
if ((! (!= w1 63 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#51
w15 = w2[w3:<Primordial,C>]
if ((! (!= w15 99 ) )) {
   17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w18 = w1[w17:<Primordial,C>]
   w20 := (+ w3 1 ); 
   w21 = w2[w20:<Primordial,C>]
   if ((! (!= w18 w21 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   w22 = w2[w3:<Primordial,C>]
   if ((! (!= w22 37 ) )) {
      24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
      if ((! (!= w24 0 ) )) {
         skip; 
      } else {
         skip; 
      }
   } else {
      w25 = w2[w3:<Primordial,C>]
      if ((! (!= w25 63 ) )) {
         27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
         w28 = w1[w27:<Primordial,C>]
         if ((! (== w28 10 ) )) {
            skip; 
         } else {
            skip; 
         }
      } else {
         w30 = w2[w3:<Primordial,C>]
         if ((! (!= w30 36 ) )) {
            32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
            w33 = w1[w32:<Primordial,C>]
            if ((! (!= w33 10 ) )) {
               skip; 
            } else {
               skip; 
            }
         } else {
            w34 = w2[w3:<Primordial,C>]
            if ((! (!= w34 91 ) )) {
               w36 := (+ w3 1 ); 
               37 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
               w38 = w1[w37:<Primordial,C>]
               40 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 38,2,36 @166 exception:39
               if ((! (== w40 0 ) )) {
                  skip; 
               } else {
                  skip; 
               }
               w41 := (Gamma !(w40==0) 1 -1); 
            } else {
               w42 = w2[w3:<Primordial,C>]
               if ((!= w42 33 )) {
                  w52 = w2[w3:<Primordial,C>]
                  invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 52 @236 exception:53
               } else {
                  44 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                  w45 = w1[w44:<Primordial,C>]
                  if ((! (== w45 10 ) )) {
                     w46 := (+ w3 1 ); 
                     47 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                     w48 = w1[w47:<Primordial,C>]
                     50 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 48,2,46 @217 exception:49
                     if ((! (!= w50 0 ) )) {
                        skip; 
                     } else {
                        skip; 
                     }
                     w51 := (Gamma !(w50!=0) 1 -1); 
                  } else {
                     skip; 
                  }
               }
            }
         }
      }
   }
}
w54 := (Gamma !(w15!=99) (Gamma !(w18!=w21) 1 -1) (Gamma !(w22!=37) (Gamma !(w24!=0) 0 -1) (Gamma !(w25!=63) (Gamma !(w28==10) 1 -1) (Gamma !(w30!=36) (Gamma !(w33!=10) 0 -1) (Gamma !(w34!=91) w41 (Gamma w42!=33 -1 (Gamma !(w45==10) w51 -1))))))); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#78
w22 = w2[w3:<Primordial,C>]
if ((! (!= w22 37 ) )) {
   24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   if ((! (!= w24 0 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   w25 = w2[w3:<Primordial,C>]
   if ((! (!= w25 63 ) )) {
      27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
      w28 = w1[w27:<Primordial,C>]
      if ((! (== w28 10 ) )) {
         skip; 
      } else {
         skip; 
      }
   } else {
      w30 = w2[w3:<Primordial,C>]
      if ((! (!= w30 36 ) )) {
         32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
         w33 = w1[w32:<Primordial,C>]
         if ((! (!= w33 10 ) )) {
            skip; 
         } else {
            skip; 
         }
      } else {
         w34 = w2[w3:<Primordial,C>]
         if ((! (!= w34 91 ) )) {
            w36 := (+ w3 1 ); 
            37 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
            w38 = w1[w37:<Primordial,C>]
            40 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 38,2,36 @166 exception:39
            if ((! (== w40 0 ) )) {
               skip; 
            } else {
               skip; 
            }
            w41 := (Gamma !(w40==0) 1 -1); 
         } else {
            w42 = w2[w3:<Primordial,C>]
            if ((!= w42 33 )) {
               w52 = w2[w3:<Primordial,C>]
               invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 52 @236 exception:53
            } else {
               44 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
               w45 = w1[w44:<Primordial,C>]
               if ((! (== w45 10 ) )) {
                  w46 := (+ w3 1 ); 
                  47 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
                  w48 = w1[w47:<Primordial,C>]
                  50 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 48,2,46 @217 exception:49
                  if ((! (!= w50 0 ) )) {
                     skip; 
                  } else {
                     skip; 
                  }
                  w51 := (Gamma !(w50!=0) 1 -1); 
               } else {
                  skip; 
               }
            }
         }
      }
   }
}
w54 := (Gamma !(w22!=37) (Gamma !(w24!=0) 0 -1) (Gamma !(w25!=63) (Gamma !(w28==10) 1 -1) (Gamma !(w30!=36) (Gamma !(w33!=10) 0 -1) (Gamma !(w34!=91) w41 (Gamma w42!=33 -1 (Gamma !(w45==10) w51 -1)))))); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#98
w25 = w2[w3:<Primordial,C>]
if ((! (!= w25 63 ) )) {
   27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w28 = w1[w27:<Primordial,C>]
   if ((! (== w28 10 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   w30 = w2[w3:<Primordial,C>]
   if ((! (!= w30 36 ) )) {
      32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
      w33 = w1[w32:<Primordial,C>]
      if ((! (!= w33 10 ) )) {
         skip; 
      } else {
         skip; 
      }
   } else {
      w34 = w2[w3:<Primordial,C>]
      if ((! (!= w34 91 ) )) {
         w36 := (+ w3 1 ); 
         37 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
         w38 = w1[w37:<Primordial,C>]
         40 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 38,2,36 @166 exception:39
         if ((! (== w40 0 ) )) {
            skip; 
         } else {
            skip; 
         }
         w41 := (Gamma !(w40==0) 1 -1); 
      } else {
         w42 = w2[w3:<Primordial,C>]
         if ((!= w42 33 )) {
            w52 = w2[w3:<Primordial,C>]
            invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 52 @236 exception:53
         } else {
            44 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
            w45 = w1[w44:<Primordial,C>]
            if ((! (== w45 10 ) )) {
               w46 := (+ w3 1 ); 
               47 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
               w48 = w1[w47:<Primordial,C>]
               50 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 48,2,46 @217 exception:49
               if ((! (!= w50 0 ) )) {
                  skip; 
               } else {
                  skip; 
               }
               w51 := (Gamma !(w50!=0) 1 -1); 
            } else {
               skip; 
            }
         }
      }
   }
}
w54 := (Gamma !(w25!=63) (Gamma !(w28==10) 1 -1) (Gamma !(w30!=36) (Gamma !(w33!=10) 0 -1) (Gamma !(w34!=91) w41 (Gamma w42!=33 -1 (Gamma !(w45==10) w51 -1))))); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#108
27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w28 = w1[w27:<Primordial,C>]
if ((! (== w28 10 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w28==10) 1 -1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#32
w12 = w1[w2:<Primordial,C>]
if ((! (!= w12 99 ) )) {
   skip; 
} else {
   w15 = w1[w2:<Primordial,C>]
   if ((!= w15 37 )) {
      w18 = w1[w2:<Primordial,C>]
      if ((!= w18 36 )) {
         w20 = w1[w2:<Primordial,C>]
         if ((!= w20 63 )) {
            w22 = w1[w2:<Primordial,C>]
            if ((!= w22 91 )) {
               w27 = w1[w2:<Primordial,C>]
               if ((! (!= w27 33 ) )) {
                  w29 := (+ w2 1 ); 
                  w30 = w1[w29:<Primordial,C>]
                  w31 := (+ w30 2 ); 
               } else {
                  w32 = w1[w2:<Primordial,C>]
                  if ((! (!= w32 42 ) )) {
                     skip; 
                  } else {
                     w34 = w1[w2:<Primordial,C>]
                     invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
                  }
               }
            } else {
               w24 := (+ w2 1 ); 
               w25 = w1[w24:<Primordial,C>]
               w26 := (+ w25 2 ); 
            }
         } else {
            skip; 
         }
      } else {
         skip; 
      }
   } else {
      skip; 
   }
}
w36 := (Gamma !(w12!=99) 2 (Gamma w15!=37 (Gamma w18!=36 (Gamma w20!=63 (Gamma w22!=91 (Gamma !(w27!=33) w31 (Gamma !(w32!=42) 1 -1)) w26) 1) 1) 1)); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#46
w15 = w1[w2:<Primordial,C>]
if ((!= w15 37 )) {
   w18 = w1[w2:<Primordial,C>]
   if ((!= w18 36 )) {
      w20 = w1[w2:<Primordial,C>]
      if ((!= w20 63 )) {
         w22 = w1[w2:<Primordial,C>]
         if ((!= w22 91 )) {
            w27 = w1[w2:<Primordial,C>]
            if ((! (!= w27 33 ) )) {
               w29 := (+ w2 1 ); 
               w30 = w1[w29:<Primordial,C>]
               w31 := (+ w30 2 ); 
            } else {
               w32 = w1[w2:<Primordial,C>]
               if ((! (!= w32 42 ) )) {
                  skip; 
               } else {
                  w34 = w1[w2:<Primordial,C>]
                  invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
               }
            }
         } else {
            w24 := (+ w2 1 ); 
            w25 = w1[w24:<Primordial,C>]
            w26 := (+ w25 2 ); 
         }
      } else {
         skip; 
      }
   } else {
      skip; 
   }
} else {
   skip; 
}
w36 := (Gamma w15!=37 (Gamma w18!=36 (Gamma w20!=63 (Gamma w22!=91 (Gamma !(w27!=33) w31 (Gamma !(w32!=42) 1 -1)) w26) 1) 1) 1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#60
w18 = w1[w2:<Primordial,C>]
if ((!= w18 36 )) {
   w20 = w1[w2:<Primordial,C>]
   if ((!= w20 63 )) {
      w22 = w1[w2:<Primordial,C>]
      if ((!= w22 91 )) {
         w27 = w1[w2:<Primordial,C>]
         if ((! (!= w27 33 ) )) {
            w29 := (+ w2 1 ); 
            w30 = w1[w29:<Primordial,C>]
            w31 := (+ w30 2 ); 
         } else {
            w32 = w1[w2:<Primordial,C>]
            if ((! (!= w32 42 ) )) {
               skip; 
            } else {
               w34 = w1[w2:<Primordial,C>]
               invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
            }
         }
      } else {
         w24 := (+ w2 1 ); 
         w25 = w1[w24:<Primordial,C>]
         w26 := (+ w25 2 ); 
      }
   } else {
      skip; 
   }
} else {
   skip; 
}
w36 := (Gamma w18!=36 (Gamma w20!=63 (Gamma w22!=91 (Gamma !(w27!=33) w31 (Gamma !(w32!=42) 1 -1)) w26) 1) 1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#74
w20 = w1[w2:<Primordial,C>]
if ((!= w20 63 )) {
   w22 = w1[w2:<Primordial,C>]
   if ((!= w22 91 )) {
      w27 = w1[w2:<Primordial,C>]
      if ((! (!= w27 33 ) )) {
         w29 := (+ w2 1 ); 
         w30 = w1[w29:<Primordial,C>]
         w31 := (+ w30 2 ); 
      } else {
         w32 = w1[w2:<Primordial,C>]
         if ((! (!= w32 42 ) )) {
            skip; 
         } else {
            w34 = w1[w2:<Primordial,C>]
            invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
         }
      }
   } else {
      w24 := (+ w2 1 ); 
      w25 = w1[w24:<Primordial,C>]
      w26 := (+ w25 2 ); 
   }
} else {
   skip; 
}
w36 := (Gamma w20!=63 (Gamma w22!=91 (Gamma !(w27!=33) w31 (Gamma !(w32!=42) 1 -1)) w26) 1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (1,1)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
  threadTerminated: 6

The solution is {r354[3].-1.26.60=50, escSub([C)C_50_NOT_TAKEN.1.5.56=0, r-1.subParaIndex.1.7.60=3, escSub([C)C_66_NOT_TAKEN.1.11.56=0, w3$56=1, escSub([C)C_66_NOT_TAKEN.1.11.58=0, w3$58=2, omatch([C[CI)Z_64_TAKEN.1.3.90=1, omatch([C[CI)Z_64_TAKEN.1.3.92=1, escSub([C)C_66_NOT_TAKEN.1.11.60=0, omatch([C[CI)Z_64_TAKEN.1.3.94=1, escSub([C)C_50_NOT_TAKEN.1.5.58=0, w14$60=4, w8$58=2, r-1.subParaIndex.1.5.54=0, w8$56=1, r-1.subParaIndex.1.5.56=1, omatch([C[CI)Z_64_NOT_TAKEN.1.3.94=0, r-1.subParaIndex.1.5.58=2, w8$52=1, escSub([C)C_66_NOT_TAKEN.1.7.56=0, escSub([C)C_66_NOT_TAKEN.1.7.58=0, escSub([C)C_26_NOT_TAKEN.1.5.60=0, w20$60=0, escSub([C)C_50_NOT_TAKEN.1.7.60=0, escSub([C)C_26_NOT_TAKEN.1.5.56=0, escSub([C)C_26_NOT_TAKEN.1.5.58=0, w54$92=-1, w54$90=-1, w54$94=-1, escSub([C)C_66_NOT_TAKEN.1.3.60=0, w8$60=3, w9$59=3, w9$57=2, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, makepat([C[C)I_474_TAKEN.1.5.9=0, w9$55=1, w11$58=50, w98$9=1, r-1.subParaIndex.1.5.60=3, w25$60=50, w57$93=0, r354[2].-1.25.58=97, w57$95=0, w11$56=97, w20$58=50, w57$91=0, w20$56=97, escSub([C)C_50_NOT_TAKEN.1.3.56=0, escSub([C)C_50_NOT_TAKEN.1.3.58=0, r354[0].-1.23.54=4, esc([C)C_7_TAKEN.1.3.51=0, w16$60=0, w6$56=1, w25$54=4, w25$56=97, w25$58=97, r-1.subParaIndex.1.3.56=2, escSub([C)C_66_NOT_TAKEN.1.9.56=0, w3$60=3, r-1.subParaIndex.1.3.58=3, escSub([C)C_66_NOT_TAKEN.1.9.58=0, i2_3_SYMINT=4, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_NOT_TAKEN.1.5.60=0, w6$58=2, w25$51=37, w14$56=2, escSub([C)C_26_NOT_TAKEN.1.3.56=0, r-1.tempIndex.1.3.62=1, omatch([C[CI)Z_64_TAKEN.1.3.61=1, w14$58=3, w6$60=3, w11$60=0, escSub([C)C_26_NOT_TAKEN.1.3.58=0, escSub([C)C_66_NOT_TAKEN.1.9.60=0, escSub([C)C_50_NOT_TAKEN.1.9.56=0, w7$58=97, w7$56=97, omatch([C[CI)Z_64_NOT_TAKEN.1.3.61=0, w4$60=50, escSub([C)C_50_NOT_TAKEN.1.9.58=0, esc([C)C_7_NOT_TAKEN.1.3.51=1, r-1.subParaIndex.1.3.60=3, r-1.tempIndex.1.3.91=2, w10$60=4, r-1.tempIndex.1.3.93=3, r-1.tempIndex.1.3.95=4, escSub([C)C_26_NOT_TAKEN.1.3.60=1, w13$58=2, escSub([C)C_66_NOT_TAKEN.1.5.58=0, w13$56=1, escSub([C)C_66_NOT_TAKEN.1.5.56=0, w7$60=50, w56$62=0, r354[1].-1.24.56=97, escSub([C)C_50_NOT_TAKEN.1.3.60=0, w24$60=0, w4$56=97, w4$58=97, i1_2_SYMINT=37, w16$56=97, w16$58=50, w13$60=3, escSub([C)C_66_NOT_TAKEN.1.7.60=0, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, escSub([C)C_50_NOT_TAKEN.1.7.58=0, w24$56=97, escSub([C)C_50_NOT_TAKEN.1.7.56=0, makepat([C[C)I_474_TAKEN.1.3.9=0, esc([C)C_26_NOT_TAKEN.1.5.51=0, w24$58=50, escSub([C)C_66_NOT_TAKEN.1.3.58=0, escSub([C)C_66_NOT_TAKEN.1.3.56=0, w8$1=1, omatch([C[CI)Z_64_NOT_TAKEN.1.3.90=0, omatch([C[CI)Z_64_NOT_TAKEN.1.3.92=0, w54$61=-1, r-1.subParaIndex.1.7.58=2, r-1.subParaIndex.1.7.56=1, escSub([C)C_50_NOT_TAKEN.1.9.60=0, w10$58=3, w10$57=97, escSub([C)C_26_NOT_TAKEN.1.7.60=0, w10$59=50, r-1.subParaIndex.1.7.54=0, w56$91=1, w57$62=0, w56$93=2, escSub([C)C_26_NOT_TAKEN.1.7.58=0, escSub([C)C_26_NOT_TAKEN.1.7.56=0, w10$56=2, w10$55=97, w56$95=3, escSub([C)C_66_NOT_TAKEN.1.5.60=0}
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
  threadTerminated: 7
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
  threadTerminated: 8
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#200
43 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w44 = w1[w43:<Primordial,C>]
if ((!= w44 42 )) {
   62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w63 = w1[w62:<Primordial,C>]
   if ((!= w63 36 )) {
      82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w82 10 ) )) {
         83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w83:<Primordial,C>] = w34
         84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w85 := (+ w84 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
      } else {
         skip; 
      }
      87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
      88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w88 10 ) )) {
         89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w89:<Primordial,C>] = w87
         90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w91 := (+ w90 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
      } else {
         skip; 
      }
   } else {
      65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w66 := (+ w65 1 ); 
      w67 = w1[w66:<Primordial,C>]
      if ((! (!= w67 0 ) )) {
         68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w68 10 ) )) {
            69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w69:<Primordial,C>] = w64
            70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w71 := (+ w70 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
         } else {
            skip; 
         }
      } else {
         72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w72 10 ) )) {
            73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w73:<Primordial,C>] = w34
            74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w75 := (+ w74 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
         } else {
            skip; 
         }
         77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
         78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         if ((! (>= w78 10 ) )) {
            79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w2[w79:<Primordial,C>] = w77
            80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
            w81 := (+ w80 1 ); 
            putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
         } else {
            skip; 
         }
      }
   }
} else {
   46 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   if ((! (<= w46 0 ) )) {
      w47 = w2[w99:<Primordial,C>]
      49 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, in_set_2(C)Z > 47 @220 exception:48
      if ((! (== w49 0 ) )) {
         skip; 
      } else {
         invokestatic < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V > 2,99 @237 exception:50
      }
      w51 := (Gamma !(w49==0) 1 w100); 
   } else {
      52 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w52 10 ) )) {
         53 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w53:<Primordial,C>] = w34
         54 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w55 := (+ w54 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 55
      } else {
         skip; 
      }
      57 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @267 exception:56
      58 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w58 10 ) )) {
         59 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w59:<Primordial,C>] = w57
         60 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w61 := (+ w60 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 61
      } else {
         skip; 
      }
   }
}
w92 := (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)) (Gamma !(w46<=0) w51 w100)); 
w93 := (Gamma w44!=42 (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)) (Gamma !(w46<=0) w99 w9)); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V >[352, 0]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   threadTerminated: 9
The solution is {}
    threadTerminated: 10
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   threadTerminated: 11
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
threadTerminated: 12
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#305
62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w63 = w1[w62:<Primordial,C>]
if ((!= w63 36 )) {
   82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w82 10 ) )) {
      83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w83:<Primordial,C>] = w34
      84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w85 := (+ w84 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
   } else {
      skip; 
   }
   87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
   88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w88 10 ) )) {
      89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w89:<Primordial,C>] = w87
      90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w91 := (+ w90 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
   } else {
      skip; 
   }
} else {
   65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w66 := (+ w65 1 ); 
   w67 = w1[w66:<Primordial,C>]
   if ((! (!= w67 0 ) )) {
      68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w68 10 ) )) {
         69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w69:<Primordial,C>] = w64
         70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w71 := (+ w70 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
      } else {
         skip; 
      }
   } else {
      72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w72 10 ) )) {
         73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w73:<Primordial,C>] = w34
         74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w75 := (+ w74 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
      } else {
         skip; 
      }
      77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
      78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w78 10 ) )) {
         79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w79:<Primordial,C>] = w77
         80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w81 := (+ w80 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
      } else {
         skip; 
      }
   }
}
w92 := (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)); 
w93 := (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.mainProcess(CCCCCCCCCCC)V#37
if ((! (> w21 0 ) )) {
   22 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
   invokevirtual < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V > 22,23 @45 exception:24
   return
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w23$138]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
 
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
if ((< w54 0 )) {
   skip; 
} else {
   55 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w56 := (+ w55 w54 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> > = 56
}
w57 := (Gamma w54<0 0 1); 


region summary single path optimization applied.
  threadTerminated: 13

The solution is {w24$143=97, w16$147=0, w24$145=50, r-1.subParaIndex.1.5.147=3, r354[2].-1.25.145=97, w16$143=97, r-1.subParaIndex.1.5.145=2, w16$145=50, r-1.subParaIndex.1.5.143=1, r-1.tempIndex.1.3.149=1, r-1.subParaIndex.1.5.141=0, w24$147=0, w4$147=50, r-1.subParaIndex.1.3.145=3, w4$145=97, r-1.subParaIndex.1.3.143=2, makepat([C[C)I_491_TAKEN.1.3.137=0, w4$143=97, r352[2].-1.4.137=32768, r-1.subParaIndex.1.3.147=3, r-1.subParaIndex.1.7.145=2, r-1.subParaIndex.1.7.143=1, w54$152=-1, w57$149=0, r-1.subParaIndex.1.7.147=3, w54$154=-1, r354[3].-1.26.147=50, w9$142=1, w9$144=2, r-1.subParaIndex.1.7.141=0, r-1.tempIndex.1.3.155=4, r-1.tempIndex.1.3.151=2, omatch([C[CI)Z_64_NOT_TAKEN.1.3.150=0, r-1.tempIndex.1.3.153=3, esc([C)C_26_NOT_TAKEN.1.5.136=0, w9$146=3, w14$143=2, w14$145=3, w14$147=4, omatch([C[CI)Z_64_NOT_TAKEN.1.3.152=0, omatch([C[CI)Z_64_NOT_TAKEN.1.3.154=0, w11$147=0, w54$148=-1, w11$145=50, r352[1].-1.67.136=99, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, omatch([C[CI)Z_64_NOT_TAKEN.1.3.148=0, w7$143=97, makepat([C[C)I_474_TAKEN.1.5.9=0, w11$143=97, w7$145=97, w57$155=0, w20$147=0, w57$153=0, w57$151=0, w98$9=1, w20$143=97, w20$145=50, esc([C)C_7_TAKEN.1.3.136=0, w7$147=50, w54$150=-1, makepat([C[C)I_315_NOT_TAKEN.1.5.136=0, i2_3_SYMINT=32768, escSub([C)C_50_NOT_TAKEN.1.3.143=0, r354[1].-1.24.143=97, escSub([C)C_50_NOT_TAKEN.1.3.145=0, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_NOT_TAKEN.1.3.147=0, makepat([C[C)I_305_TAKEN.1.3.136=1, escSub([C)C_50_NOT_TAKEN.1.5.145=0, escSub([C)C_50_NOT_TAKEN.1.5.147=0, escSub([C)C_50_NOT_TAKEN.1.5.143=0, w25$143=97, w25$141=32768, w3$143=1, w25$147=50, w3$145=2, w25$145=97, w3$147=3, makepat([C[C)I_323_NOT_TAKEN.1.7.136=0, w13$145=2, escSub([C)C_50_NOT_TAKEN.1.7.143=0, makepat([C[C)I_433_NOT_TAKEN.1.5.136=1, escSub([C)C_50_NOT_TAKEN.1.7.145=0, w13$143=1, escSub([C)C_50_NOT_TAKEN.1.7.147=0, w56$149=0, w13$147=3, escSub([C)C_66_NOT_TAKEN.1.7.143=0, escSub([C)C_66_NOT_TAKEN.1.9.147=0, escSub([C)C_66_NOT_TAKEN.1.7.145=0, escSub([C)C_66_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.9.143=0, escSub([C)C_66_NOT_TAKEN.1.9.145=0, i1_2_SYMINT=32768, escSub([C)C_50_NOT_TAKEN.1.9.145=0, escSub([C)C_50_NOT_TAKEN.1.9.147=0, r352[0].-1.2.137=63, escSub([C)C_50_NOT_TAKEN.1.9.143=0, makepat([C[C)I_305_NOT_TAKEN.1.3.136=0, esc([C)C_26_NOT_TAKEN.1.13.136=0, w56$151=1, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, w56$153=2, w56$155=3, makepat([C[C)I_474_TAKEN.1.3.9=0, w8$147=3, escSub([C)C_66_NOT_TAKEN.1.5.147=0, r354[0].-1.23.141=32768, r352[1].-1.3.137=99, escSub([C)C_26_NOT_TAKEN.1.7.145=0, w103$137=1, escSub([C)C_26_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.5.143=0, escSub([C)C_66_NOT_TAKEN.1.5.145=0, makepat([C[C)I_404_NOT_TAKEN.1.5.136=1, escSub([C)C_26_NOT_TAKEN.1.7.143=0, w8$1=1, escSub([C)C_66_NOT_TAKEN.1.11.145=0, w8$145=2, escSub([C)C_66_NOT_TAKEN.1.11.143=0, w8$143=1, escSub([C)C_66_NOT_TAKEN.1.11.147=0, escSub([C)C_66_NOT_TAKEN.1.3.145=0, w8$139=1, escSub([C)C_66_NOT_TAKEN.1.3.147=0, r352[2].-1.68.136=32768, escSub([C)C_26_NOT_TAKEN.1.3.143=0, esc([C)C_7_TAKEN.1.9.136=0, escSub([C)C_26_NOT_TAKEN.1.5.147=0, escSub([C)C_26_NOT_TAKEN.1.3.145=0, escSub([C)C_66_NOT_TAKEN.1.3.143=0, escSub([C)C_26_NOT_TAKEN.1.3.147=1, w6$143=1, escSub([C)C_26_NOT_TAKEN.1.5.143=0, r-1.patIndex.1.15.136=3, escSub([C)C_26_NOT_TAKEN.1.5.145=0, w6$147=3, w6$145=2, w10$142=97, w10$143=2, w25$135=32768, w10$144=97, w10$145=3, w10$146=50, w10$147=4}

The solution is {w24$143=97, w16$147=0, w24$145=50, r-1.subParaIndex.1.5.147=3, r354[2].-1.25.145=97, w16$143=97, r-1.subParaIndex.1.5.145=2, w16$145=50, r-1.subParaIndex.1.5.143=1, r-1.tempIndex.1.3.149=1, r-1.subParaIndex.1.5.141=0, w24$147=0, w4$147=50, r-1.subParaIndex.1.3.145=3, w4$145=97, r-1.subParaIndex.1.3.143=2, makepat([C[C)I_491_TAKEN.1.3.137=0, w4$143=97, r352[2].-1.4.137=64, r-1.subParaIndex.1.3.147=3, r-1.subParaIndex.1.7.145=2, r-1.subParaIndex.1.7.143=1, w54$152=-1, w57$149=0, r-1.subParaIndex.1.7.147=3, w54$154=-1, r354[3].-1.26.147=50, w9$142=1, w9$144=2, r-1.subParaIndex.1.7.141=0, r-1.tempIndex.1.3.155=4, r-1.tempIndex.1.3.151=2, omatch([C[CI)Z_64_NOT_TAKEN.1.3.150=0, r-1.tempIndex.1.3.153=3, esc([C)C_26_NOT_TAKEN.1.5.136=1, w9$146=3, w14$143=2, w14$145=3, w14$147=4, omatch([C[CI)Z_64_NOT_TAKEN.1.3.152=0, omatch([C[CI)Z_64_NOT_TAKEN.1.3.154=0, w11$147=0, w54$148=-1, w11$145=50, r352[1].-1.67.136=99, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, omatch([C[CI)Z_64_NOT_TAKEN.1.3.148=0, w7$143=97, makepat([C[C)I_474_TAKEN.1.5.9=0, w11$143=97, w7$145=97, w57$155=0, w20$147=0, w57$153=0, w57$151=0, w98$9=1, w20$143=97, w20$145=50, esc([C)C_7_TAKEN.1.3.136=1, w7$147=50, w54$150=-1, makepat([C[C)I_315_NOT_TAKEN.1.5.136=0, i2_3_SYMINT=32768, escSub([C)C_50_NOT_TAKEN.1.3.143=0, r354[1].-1.24.143=97, escSub([C)C_50_NOT_TAKEN.1.3.145=0, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_NOT_TAKEN.1.3.147=0, escSub([C)C_50_NOT_TAKEN.1.5.145=0, makepat([C[C)I_305_TAKEN.1.3.136=1, escSub([C)C_50_NOT_TAKEN.1.5.147=0, escSub([C)C_50_NOT_TAKEN.1.5.143=0, w25$143=97, w25$141=32768, w3$143=1, w25$147=50, w3$145=2, w25$145=97, w3$147=3, makepat([C[C)I_323_NOT_TAKEN.1.7.136=0, w13$145=2, escSub([C)C_50_NOT_TAKEN.1.7.143=0, escSub([C)C_50_NOT_TAKEN.1.7.145=0, w13$143=1, makepat([C[C)I_433_NOT_TAKEN.1.5.136=1, escSub([C)C_50_NOT_TAKEN.1.7.147=0, w56$149=0, w13$147=3, escSub([C)C_66_NOT_TAKEN.1.7.143=0, escSub([C)C_66_NOT_TAKEN.1.9.147=0, escSub([C)C_66_NOT_TAKEN.1.7.145=0, escSub([C)C_66_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.9.143=0, escSub([C)C_66_NOT_TAKEN.1.9.145=0, i1_2_SYMINT=64, escSub([C)C_50_NOT_TAKEN.1.9.145=0, escSub([C)C_50_NOT_TAKEN.1.9.147=0, r352[0].-1.2.137=63, escSub([C)C_50_NOT_TAKEN.1.9.143=0, makepat([C[C)I_305_NOT_TAKEN.1.3.136=0, esc([C)C_26_NOT_TAKEN.1.13.136=1, w56$151=1, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, w56$153=2, w56$155=3, makepat([C[C)I_474_TAKEN.1.3.9=0, w8$147=3, escSub([C)C_66_NOT_TAKEN.1.5.147=0, r354[0].-1.23.141=32768, r352[1].-1.3.137=99, escSub([C)C_26_NOT_TAKEN.1.7.145=0, w103$137=1, escSub([C)C_26_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.5.143=0, escSub([C)C_66_NOT_TAKEN.1.5.145=0, makepat([C[C)I_404_NOT_TAKEN.1.5.136=1, escSub([C)C_26_NOT_TAKEN.1.7.143=0, w8$1=1, escSub([C)C_66_NOT_TAKEN.1.11.145=0, w8$145=2, escSub([C)C_66_NOT_TAKEN.1.11.143=0, w8$143=1, escSub([C)C_66_NOT_TAKEN.1.11.147=0, escSub([C)C_66_NOT_TAKEN.1.3.145=0, w8$139=1, escSub([C)C_66_NOT_TAKEN.1.3.147=0, r352[2].-1.68.136=64, escSub([C)C_26_NOT_TAKEN.1.3.143=0, esc([C)C_7_TAKEN.1.9.136=1, escSub([C)C_26_NOT_TAKEN.1.5.147=0, escSub([C)C_26_NOT_TAKEN.1.3.145=0, escSub([C)C_66_NOT_TAKEN.1.3.143=0, escSub([C)C_26_NOT_TAKEN.1.3.147=1, w6$143=1, escSub([C)C_26_NOT_TAKEN.1.5.143=0, r-1.patIndex.1.15.136=3, escSub([C)C_26_NOT_TAKEN.1.5.145=0, w6$147=3, w6$145=2, w10$142=97, w10$143=2, w25$135=64, w10$144=97, w10$145=3, w10$146=50, w10$147=4}
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.change([C[C[C)V#27
if ((! (< w9 0 ) )) {
   if ((! (== w22 w9 ) )) {
      invokestatic < Application, Ltcgbenchmarks/replace/replace11, putsub([CII[C)V > 1,23,9,3 @42 exception:10
   } else {
      skip; 
   }
} else {
   skip; 
}
w11 := (Gamma !(w9<0) (Gamma !(w22==w9) w9 w22) w22); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, putsub([CII[C)V >[355, 2, r-1.tempIndex.1.3.153, 354]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.change([C[C[C)V#33
if ((! (== w22 w9 ) )) {
   invokestatic < Application, Ltcgbenchmarks/replace/replace11, putsub([CII[C)V > 1,23,9,3 @42 exception:10
} else {
   skip; 
}
w11 := (Gamma !(w22==w9) w9 w22); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, putsub([CII[C)V >[355, 2, r-1.tempIndex.1.3.153, 354]

    
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.change([C[C[C)V#51
if ((!= w9 -1 )) {
   if ((! (!= w9 w23 ) )) {
      17 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
      w18 = w1[w23:<Primordial,C>]
      invokevirtual < Application, Ljava/io/PrintStream, print(C)V > 17,18 @87 exception:19
      w20 := (+ w23 1 ); 
   } else {
      skip; 
   }
} else {
   12 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
   w13 = w1[w23:<Primordial,C>]
   invokevirtual < Application, Ljava/io/PrintStream, print(C)V > 12,13 @61 exception:14
   w16 := (+ w23 1 ); 
}
w21 := (Gamma w9!=-1 (Gamma !(w9!=w23) w20 w9) w16); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (3,3)


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.change([C[C[C)V#77
if ((! (!= w9 w23 ) )) {
   17 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >
   w18 = w1[w23:<Primordial,C>]
   invokevirtual < Application, Ljava/io/PrintStream, print(C)V > 17,18 @87 exception:19
   w20 := (+ w23 1 ); 
} else {
   skip; 
}
w21 := (Gamma !(w9!=w23) w20 w9); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (2,2)

 threadTerminated: 14

The solution is {w24$143=97, w16$147=0, w24$145=50, r354[2].-1.25.145=97, r-1.subParaIndex.1.5.147=3, w16$143=97, r-1.subParaIndex.1.5.145=2, w16$145=50, r-1.subParaIndex.1.5.143=1, r-1.tempIndex.1.3.149=1, r-1.subParaIndex.1.5.141=0, w24$147=0, w4$147=50, r-1.subParaIndex.1.3.145=3, w4$145=97, r-1.subParaIndex.1.3.143=2, makepat([C[C)I_491_TAKEN.1.3.137=0, w4$143=97, r352[2].-1.4.137=38, r-1.subParaIndex.1.3.147=3, r-1.subParaIndex.1.7.145=2, r-1.subParaIndex.1.7.143=1, w54$152=1, w57$149=0, r-1.subParaIndex.1.7.147=3, r354[3].-1.26.147=50, w9$142=1, w9$144=2, r-1.subParaIndex.1.7.141=0, r-1.tempIndex.1.3.151=2, r-1.tempIndex.1.3.153=4, omatch([C[CI)Z_64_NOT_TAKEN.1.3.150=0, esc([C)C_26_NOT_TAKEN.1.5.136=0, w9$146=3, w14$143=2, w14$145=3, w14$147=4, omatch([C[CI)Z_64_NOT_TAKEN.1.3.152=1, w11$147=0, w54$148=-1, w11$145=50, r352[1].-1.67.136=99, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, omatch([C[CI)Z_64_NOT_TAKEN.1.3.148=0, w7$143=97, makepat([C[C)I_474_TAKEN.1.5.9=0, w11$143=97, w7$145=97, w20$147=0, w57$153=1, w57$151=0, w98$9=1, w20$143=97, w20$145=50, esc([C)C_7_TAKEN.1.3.136=0, w7$147=50, w54$150=-1, makepat([C[C)I_315_NOT_TAKEN.1.5.136=0, i2_3_SYMINT=38, escSub([C)C_50_NOT_TAKEN.1.3.143=0, r354[1].-1.24.143=97, escSub([C)C_50_NOT_TAKEN.1.3.145=0, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_NOT_TAKEN.1.3.147=0, escSub([C)C_50_NOT_TAKEN.1.5.145=0, makepat([C[C)I_305_TAKEN.1.3.136=1, escSub([C)C_50_NOT_TAKEN.1.5.147=0, escSub([C)C_50_NOT_TAKEN.1.5.143=0, w25$143=97, w25$141=38, w3$143=1, w25$147=50, w3$145=2, w25$145=97, w3$147=3, makepat([C[C)I_323_NOT_TAKEN.1.7.136=0, w13$145=2, escSub([C)C_50_NOT_TAKEN.1.7.143=0, escSub([C)C_50_NOT_TAKEN.1.7.145=0, w13$143=1, makepat([C[C)I_433_NOT_TAKEN.1.5.136=1, escSub([C)C_50_NOT_TAKEN.1.7.147=0, w56$149=0, w13$147=3, escSub([C)C_66_NOT_TAKEN.1.7.143=0, escSub([C)C_66_NOT_TAKEN.1.9.147=0, escSub([C)C_66_NOT_TAKEN.1.7.145=0, escSub([C)C_66_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.9.143=0, escSub([C)C_66_NOT_TAKEN.1.9.145=0, i1_2_SYMINT=38, escSub([C)C_50_NOT_TAKEN.1.9.145=0, escSub([C)C_50_NOT_TAKEN.1.9.147=0, r352[0].-1.2.137=63, escSub([C)C_50_NOT_TAKEN.1.9.143=0, makepat([C[C)I_305_NOT_TAKEN.1.3.136=0, esc([C)C_26_NOT_TAKEN.1.13.136=0, w56$151=1, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, w56$153=4, makepat([C[C)I_474_TAKEN.1.3.9=0, w8$147=3, r354[0].-1.23.141=65535, escSub([C)C_66_NOT_TAKEN.1.5.147=0, r352[1].-1.3.137=99, escSub([C)C_26_NOT_TAKEN.1.7.145=0, w103$137=1, escSub([C)C_26_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.5.143=0, escSub([C)C_66_NOT_TAKEN.1.5.145=0, makepat([C[C)I_404_NOT_TAKEN.1.5.136=1, escSub([C)C_26_NOT_TAKEN.1.7.143=0, w8$1=1, escSub([C)C_66_NOT_TAKEN.1.11.145=0, w8$145=2, escSub([C)C_66_NOT_TAKEN.1.11.143=0, w8$143=1, escSub([C)C_66_NOT_TAKEN.1.11.147=0, escSub([C)C_66_NOT_TAKEN.1.3.145=0, w8$139=1, escSub([C)C_66_NOT_TAKEN.1.3.147=0, r352[2].-1.68.136=38, escSub([C)C_26_NOT_TAKEN.1.3.143=0, escSub([C)C_26_NOT_TAKEN.1.5.147=0, escSub([C)C_26_NOT_TAKEN.1.3.145=0, esc([C)C_7_TAKEN.1.9.136=0, escSub([C)C_66_NOT_TAKEN.1.3.143=0, escSub([C)C_26_NOT_TAKEN.1.3.147=1, w6$143=1, escSub([C)C_26_NOT_TAKEN.1.5.143=0, r-1.patIndex.1.15.136=3, escSub([C)C_26_NOT_TAKEN.1.5.145=0, w6$147=3, w6$145=2, w10$142=97, w10$143=2, w25$135=38, w10$144=97, w10$145=3, w10$146=50, w10$147=4}
The solution is {}
     threadTerminated: 15
The solution is {}
    
---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
17 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
w18 = w1[w17:<Primordial,C>]
w20 := (+ w3 1 ); 
w21 = w2[w20:<Primordial,C>]
if ((! (!= w18 w21 ) )) {
   skip; 
} else {
   skip; 
}
w54 := (Gamma !(w18!=w21) 1 -1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
region instantiation is not beneficial (2,2)

    threadTerminated: 16
The solution is {}
        threadTerminated: 17
The solution is {}
       threadTerminated: 18
The solution is {}
       threadTerminated: 19
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.omatch([C[CI)Z#122
w30 = w2[w3:<Primordial,C>]
if ((! (!= w30 36 ) )) {
   32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
   w33 = w1[w32:<Primordial,C>]
   if ((! (!= w33 10 ) )) {
      skip; 
   } else {
      skip; 
   }
} else {
   w34 = w2[w3:<Primordial,C>]
   if ((! (!= w34 91 ) )) {
      w36 := (+ w3 1 ); 
      37 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
      w38 = w1[w37:<Primordial,C>]
      40 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 38,2,36 @166 exception:39
      if ((! (== w40 0 ) )) {
         skip; 
      } else {
         skip; 
      }
      w41 := (Gamma !(w40==0) 1 -1); 
   } else {
      w42 = w2[w3:<Primordial,C>]
      if ((!= w42 33 )) {
         w52 = w2[w3:<Primordial,C>]
         invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 52 @236 exception:53
      } else {
         44 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
         w45 = w1[w44:<Primordial,C>]
         if ((! (== w45 10 ) )) {
            w46 := (+ w3 1 ); 
            47 = getstatic < Application, Ltcgbenchmarks/replace/replace11, tempIndex, <Primordial,I> >
            w48 = w1[w47:<Primordial,C>]
            50 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z > 48,2,46 @217 exception:49
            if ((! (!= w50 0 ) )) {
               skip; 
            } else {
               skip; 
            }
            w51 := (Gamma !(w50!=0) 1 -1); 
         } else {
            skip; 
         }
      }
   }
}
w54 := (Gamma !(w30!=36) (Gamma !(w33!=10) 0 -1) (Gamma !(w34!=91) w41 (Gamma w42!=33 -1 (Gamma !(w45==10) w51 -1)))); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[w40$167] = invoke < Application, Ltcgbenchmarks/replace/replace11, locate(C[CI)Z >[50, 352, 2]

c2a&athreadTerminated: 20

The solution is {w24$143=97, w16$147=0, w24$145=50, r-1.subParaIndex.1.5.147=3, r354[2].-1.25.145=97, w16$143=97, r-1.subParaIndex.1.5.145=2, w16$145=50, r-1.subParaIndex.1.5.143=1, r-1.subParaIndex.1.5.141=0, w24$147=0, w4$147=50, r-1.subParaIndex.1.3.145=3, w4$145=97, r-1.subParaIndex.1.3.143=2, makepat([C[C)I_491_TAKEN.1.3.137=0, w4$143=97, r352[2].-1.4.137=0, r-1.subParaIndex.1.3.147=3, r-1.subParaIndex.1.7.145=2, r-1.subParaIndex.1.7.143=1, r-1.subParaIndex.1.7.147=3, r354[3].-1.26.147=50, w9$142=1, w9$144=2, r-1.subParaIndex.1.7.141=0, esc([C)C_26_NOT_TAKEN.1.5.136=0, w9$146=3, w14$143=2, w14$145=3, w14$147=4, w11$147=0, w11$145=50, r352[1].-1.67.136=36, makepat([C[C)I_474_NOT_TAKEN.1.5.9=1, makepat([C[C)I_12_TAKEN.1.3.1=0, w7$143=97, makepat([C[C)I_474_TAKEN.1.5.9=0, w11$143=97, w7$145=97, w20$147=0, w98$9=1, w20$143=97, w20$145=50, esc([C)C_7_TAKEN.1.3.136=0, w7$147=50, makepat([C[C)I_315_NOT_TAKEN.1.5.136=1, i2_3_SYMINT=32768, escSub([C)C_50_NOT_TAKEN.1.3.143=0, r354[1].-1.24.143=97, escSub([C)C_50_NOT_TAKEN.1.3.145=0, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_50_NOT_TAKEN.1.3.147=0, escSub([C)C_50_NOT_TAKEN.1.5.145=0, makepat([C[C)I_305_TAKEN.1.3.136=0, escSub([C)C_50_NOT_TAKEN.1.5.147=0, escSub([C)C_50_NOT_TAKEN.1.5.143=0, w25$143=97, w25$141=32768, w3$143=1, w25$147=50, w3$145=2, w25$145=97, w3$147=3, makepat([C[C)I_323_NOT_TAKEN.1.7.136=1, w13$145=2, escSub([C)C_50_NOT_TAKEN.1.7.143=0, escSub([C)C_50_NOT_TAKEN.1.7.145=0, w13$143=1, makepat([C[C)I_433_NOT_TAKEN.1.5.136=0, escSub([C)C_50_NOT_TAKEN.1.7.147=0, w13$147=3, escSub([C)C_66_NOT_TAKEN.1.7.143=0, escSub([C)C_66_NOT_TAKEN.1.9.147=0, escSub([C)C_66_NOT_TAKEN.1.7.145=0, escSub([C)C_66_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.9.143=0, escSub([C)C_66_NOT_TAKEN.1.9.145=0, i1_2_SYMINT=36, escSub([C)C_50_NOT_TAKEN.1.9.145=0, escSub([C)C_50_NOT_TAKEN.1.9.147=0, r352[0].-1.2.137=63, escSub([C)C_50_NOT_TAKEN.1.9.143=0, makepat([C[C)I_305_NOT_TAKEN.1.3.136=1, esc([C)C_26_NOT_TAKEN.1.13.136=0, makepat([C[C)I_474_NOT_TAKEN.1.3.9=1, i0_1_SYMINT=63, makepat([C[C)I_474_TAKEN.1.3.9=0, w8$147=3, escSub([C)C_66_NOT_TAKEN.1.5.147=0, r354[0].-1.23.141=32768, r352[1].-1.3.137=36, escSub([C)C_26_NOT_TAKEN.1.7.145=0, w103$137=1, escSub([C)C_26_NOT_TAKEN.1.7.147=0, escSub([C)C_66_NOT_TAKEN.1.5.143=0, escSub([C)C_66_NOT_TAKEN.1.5.145=0, makepat([C[C)I_404_NOT_TAKEN.1.5.136=0, escSub([C)C_26_NOT_TAKEN.1.7.143=0, w8$1=1, escSub([C)C_66_NOT_TAKEN.1.11.145=0, w8$145=2, escSub([C)C_66_NOT_TAKEN.1.11.143=0, w8$143=1, escSub([C)C_66_NOT_TAKEN.1.11.147=0, escSub([C)C_66_NOT_TAKEN.1.3.145=0, w8$139=1, escSub([C)C_66_NOT_TAKEN.1.3.147=0, r352[2].-1.68.136=0, escSub([C)C_26_NOT_TAKEN.1.3.143=0, escSub([C)C_26_NOT_TAKEN.1.5.147=0, escSub([C)C_26_NOT_TAKEN.1.3.145=0, esc([C)C_7_TAKEN.1.9.136=0, escSub([C)C_66_NOT_TAKEN.1.3.143=0, escSub([C)C_26_NOT_TAKEN.1.3.147=1, w6$143=1, escSub([C)C_26_NOT_TAKEN.1.5.143=0, r-1.patIndex.1.15.136=2, escSub([C)C_26_NOT_TAKEN.1.5.145=0, w6$147=3, w6$145=2, w10$142=97, w10$143=2, w25$135=36, w10$144=97, w10$145=3, w10$146=50, w10$147=4}
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   a&athreadTerminated: 21
The solution is {}
c      threadTerminated: 22
The solution is {}
2   athreadTerminated: 23
The solution is {}
a&athreadTerminated: 24
The solution is {}
c2a&athreadTerminated: 25
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
a&athreadTerminated: 26
The solution is {}
cthreadTerminated: 27
The solution is {}
2athreadTerminated: 28
The solution is {}
a&athreadTerminated: 29
The solution is {}
c2a&athreadTerminated: 30
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   c   c   c   c   threadTerminated: 31
The solution is {}
                    threadTerminated: 32
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
               threadTerminated: 33
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
threadTerminated: 34
The solution is {}
Challege: illegal pattern!
threadTerminated: 35
The solution is {}
Challege: illegal pattern!
threadTerminated: 36
The solution is {}
Challege: illegal pattern!
threadTerminated: 37
The solution is {}
Challege: illegal pattern!
threadTerminated: 38
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 39
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 40
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 41
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   2a&athreadTerminated: 42
The solution is {}
    2a&athreadTerminated: 43
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   2a&athreadTerminated: 44
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
2a&athreadTerminated: 45
The solution is {}
Challege: illegal pattern!
threadTerminated: 46
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.esc([C)C#7
3 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w4 = w1[w3:<Primordial,C>]
if ((! (== w4 64 ) )) {
   6 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w7 = w1[w6:<Primordial,C>]
} else {
   8 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w10 := (+ w8 1 ); 
   w11 = w1[w10:<Primordial,C>]
   if ((!= w11 0 )) {
      13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w14 := (+ w13 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> > = 14
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w16 = w1[w15:<Primordial,C>]
      if ((! (!= w16 110 ) )) {
         skip; 
      } else {
         19 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         w20 = w1[w19:<Primordial,C>]
         if ((!= w20 116 )) {
            23 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
            w24 = w1[w23:<Primordial,C>]
         } else {
            skip; 
         }
      }
   } else {
      skip; 
   }
}
w25 := (Gamma !(w4==64) w7 (Gamma w11!=0 (Gamma !(w16!=110) 10 (Gamma w20!=116 w24 9)) 64)); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 47
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 48
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 49
The solution is {}
Challege: illegal pattern!
threadTerminated: 50
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#305
62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w63 = w1[w62:<Primordial,C>]
if ((!= w63 36 )) {
   82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w82 10 ) )) {
      83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w83:<Primordial,C>] = w34
      84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w85 := (+ w84 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
   } else {
      skip; 
   }
   87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
   88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w88 10 ) )) {
      89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w89:<Primordial,C>] = w87
      90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w91 := (+ w90 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
   } else {
      skip; 
   }
} else {
   65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w66 := (+ w65 1 ); 
   w67 = w1[w66:<Primordial,C>]
   if ((! (!= w67 0 ) )) {
      68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w68 10 ) )) {
         69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w69:<Primordial,C>] = w64
         70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w71 := (+ w70 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
      } else {
         skip; 
      }
   } else {
      72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w72 10 ) )) {
         73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w73:<Primordial,C>] = w34
         74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w75 := (+ w74 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
      } else {
         skip; 
      }
      77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
      78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w78 10 ) )) {
         79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w79:<Primordial,C>] = w77
         80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w81 := (+ w80 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
      } else {
         skip; 
      }
   }
}
w92 := (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)); 
w93 := (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   2a&athreadTerminated: 51
The solution is {}
    2a&athreadTerminated: 52
The solution is {}
c2a&athreadTerminated: 53
The solution is {}
c2a&athreadTerminated: 54
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   2a&athreadTerminated: 55
The solution is {}
c2a&athreadTerminated: 56
The solution is {}
c2a&athreadTerminated: 57
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
2a&athreadTerminated: 58
The solution is {}
c2a&athreadTerminated: 59
The solution is {}
c2a&athreadTerminated: 60
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   c2a&athreadTerminated: 61
The solution is {}
    c2a&athreadTerminated: 62
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   c2a&athreadTerminated: 63
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 64
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.esc([C)C#7
3 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w4 = w1[w3:<Primordial,C>]
if ((! (== w4 64 ) )) {
   6 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w7 = w1[w6:<Primordial,C>]
} else {
   8 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w10 := (+ w8 1 ); 
   w11 = w1[w10:<Primordial,C>]
   if ((!= w11 0 )) {
      13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w14 := (+ w13 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> > = 14
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
      w16 = w1[w15:<Primordial,C>]
      if ((! (!= w16 110 ) )) {
         skip; 
      } else {
         19 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
         w20 = w1[w19:<Primordial,C>]
         if ((!= w20 116 )) {
            23 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
            w24 = w1[w23:<Primordial,C>]
         } else {
            skip; 
         }
      }
   } else {
      skip; 
   }
}
w25 := (Gamma !(w4==64) w7 (Gamma w11!=0 (Gamma !(w16!=110) 10 (Gamma w20!=116 w24 9)) 64)); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 65
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 66
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 67
The solution is {}
Challege: illegal pattern!
threadTerminated: 68
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#109
27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
if ((! (!= w27 0 ) )) {
   28 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w28 10 ) )) {
      29 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w29:<Primordial,C>] = w26
      30 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w31 := (+ w30 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 31
   } else {
      skip; 
   }
} else {
   32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w32 10 ) )) {
      33 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w33:<Primordial,C>] = w34
      35 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w36 := (+ w35 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 36
   } else {
      skip; 
   }
   38 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @162 exception:37
   39 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w39 10 ) )) {
      40 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w40:<Primordial,C>] = w38
      41 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w42 := (+ w41 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 42
   } else {
      skip; 
   }
}
w92 := (Gamma !(w27!=0) (Gamma !(w28>=10) w100 w100) w100); 
w93 := (Gamma !(w27!=0) (Gamma !(w28>=10) w9 w9) w9); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 69
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 70
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 71
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#206
46 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
if ((! (<= w46 0 ) )) {
   w47 = w2[w99:<Primordial,C>]
   49 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, in_set_2(C)Z > 47 @220 exception:48
   if ((! (== w49 0 ) )) {
      skip; 
   } else {
      invokestatic < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V > 2,99 @237 exception:50
   }
   w51 := (Gamma !(w49==0) 1 w100); 
} else {
   52 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w52 10 ) )) {
      53 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w53:<Primordial,C>] = w34
      54 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w55 := (+ w54 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 55
   } else {
      skip; 
   }
   57 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @267 exception:56
   58 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w58 10 ) )) {
      59 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w59:<Primordial,C>] = w57
      60 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w61 := (+ w60 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 61
   } else {
      skip; 
   }
}
w92 := (Gamma !(w46<=0) w51 w100); 
w93 := (Gamma !(w46<=0) w99 w9); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ltcgbenchmarks/replace/replace11, stclose([CI)V >[352, 0]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   cc   2c   ac   &c   athreadTerminated: 72
The solution is {}
    c    2    a    &    athreadTerminated: 73
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   c   2   a   &   athreadTerminated: 74
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 75
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#305
62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w63 = w1[w62:<Primordial,C>]
if ((!= w63 36 )) {
   82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w82 10 ) )) {
      83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w83:<Primordial,C>] = w34
      84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w85 := (+ w84 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
   } else {
      skip; 
   }
   87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
   88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w88 10 ) )) {
      89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w89:<Primordial,C>] = w87
      90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w91 := (+ w90 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
   } else {
      skip; 
   }
} else {
   65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w66 := (+ w65 1 ); 
   w67 = w1[w66:<Primordial,C>]
   if ((! (!= w67 0 ) )) {
      68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w68 10 ) )) {
         69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w69:<Primordial,C>] = w64
         70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w71 := (+ w70 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
      } else {
         skip; 
      }
   } else {
      72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w72 10 ) )) {
         73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w73:<Primordial,C>] = w34
         74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w75 := (+ w74 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
      } else {
         skip; 
      }
      77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
      78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w78 10 ) )) {
         79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w79:<Primordial,C>] = w77
         80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w81 := (+ w80 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
      } else {
         skip; 
      }
   }
}
w92 := (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)); 
w93 := (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 76
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 77
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 78
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 79
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 80
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 81
The solution is {}

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#305
62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w63 = w1[w62:<Primordial,C>]
if ((!= w63 36 )) {
   82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w82 10 ) )) {
      83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w83:<Primordial,C>] = w34
      84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w85 := (+ w84 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
   } else {
      skip; 
   }
   87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
   88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w88 10 ) )) {
      89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w89:<Primordial,C>] = w87
      90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w91 := (+ w90 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
   } else {
      skip; 
   }
} else {
   65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w66 := (+ w65 1 ); 
   w67 = w1[w66:<Primordial,C>]
   if ((! (!= w67 0 ) )) {
      68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w68 10 ) )) {
         69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w69:<Primordial,C>] = w64
         70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w71 := (+ w70 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
      } else {
         skip; 
      }
   } else {
      72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w72 10 ) )) {
         73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w73:<Primordial,C>] = w34
         74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w75 := (+ w74 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
      } else {
         skip; 
      }
      77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
      78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w78 10 ) )) {
         79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w79:<Primordial,C>] = w77
         80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w81 := (+ w80 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
      } else {
         skip; 
      }
   }
}
w92 := (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)); 
w93 := (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#43
13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((! (>= w13 10 ) )) {
   15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w15:<Primordial,C>] = w12
   16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w17 := (+ w16 1 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 17
} else {
   skip; 
}
w92 := w100; 
w93 := w9; 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   a&athreadTerminated: 82
The solution is {}
    a&athreadTerminated: 83
The solution is {}
cc   &athreadTerminated: 84
The solution is {}
    &athreadTerminated: 85
The solution is {}
2c   athreadTerminated: 86
The solution is {}
    athreadTerminated: 87
The solution is {}
ac   threadTerminated: 88
The solution is {}
    threadTerminated: 89
The solution is {}
&athreadTerminated: 90

The solution is {escSub([C)C_50_NOT_TAKEN.1.5.343=0, escSub([C)C_50_NOT_TAKEN.1.5.345=0, esc([C)C_50_NOT_TAKEN.1.14.334=0, r-1.patParaIndex.1.13.334=0, esc([C)C_50_TAKEN.1.3.334=1, esc([C)C_50_TAKEN.1.17.334=0, escSub([C)C_50_NOT_TAKEN.1.5.341=0, w25$341=97, w3$341=1, w25$345=50, w3$343=2, esc([C)C_66_TAKEN.1.12.334=1, w25$343=97, makepat([C[C)I_43_TAKEN.1.3.335=0, w3$345=3, r-1.patIndex.1.3.335=3, w13$343=2, escSub([C)C_50_NOT_TAKEN.1.7.341=0, esc([C)C_50_NOT_TAKEN.1.16.334=0, escSub([C)C_50_NOT_TAKEN.1.7.343=0, w13$341=1, esc([C)C_50_TAKEN.1.5.334=1, escSub([C)C_50_NOT_TAKEN.1.7.345=0, esc([C)C_50_TAKEN.1.10.334=1, w13$345=3, escSub([C)C_66_NOT_TAKEN.1.7.341=0, makepat([C[C)I_349_NOT_TAKEN.1.7.334=1, r352[7].-1.9.335=0, escSub([C)C_66_NOT_TAKEN.1.9.345=0, escSub([C)C_66_NOT_TAKEN.1.7.343=0, esc([C)C_66_TAKEN.1.20.334=0, escSub([C)C_66_NOT_TAKEN.1.7.345=0, r352[7].-1.9.336=0, escSub([C)C_66_NOT_TAKEN.1.9.341=0, escSub([C)C_66_NOT_TAKEN.1.9.343=0, escSub([C)C_50_NOT_TAKEN.1.9.343=0, w17$335=3, esc([C)C_66_TAKEN.1.14.334=1, escSub([C)C_50_NOT_TAKEN.1.9.345=0, escSub([C)C_50_NOT_TAKEN.1.9.341=0, r352[0].-1.2.335=99, r352[0].-1.2.336=99, r354[0].-1.23.339=4, esc([C)C_66_NOT_TAKEN.1.3.334=0, esc([C)C_50_TAKEN.1.12.334=1, makepat([C[C)I_349_NOT_TAKEN.1.5.334=1, makepat([C[C)I_12_TAKEN.1.3.1=0, r352[6].-1.8.335=0, makepat([C[C)I_378_NOT_TAKEN.1.7.334=1, w8$345=3, esc([C)C_66_NOT_TAKEN.1.16.334=0, escSub([C)C_66_NOT_TAKEN.1.5.345=0, escSub([C)C_26_NOT_TAKEN.1.7.343=0, r352[1].-1.3.335=36, r352[1].-1.3.336=36, w103$336=1, escSub([C)C_26_NOT_TAKEN.1.7.345=0, escSub([C)C_66_NOT_TAKEN.1.5.341=0, escSub([C)C_66_NOT_TAKEN.1.5.343=0, makepat([C[C)I_315_TAKEN.1.3.334=1, r-1.patParaIndex.1.10.334=0, escSub([C)C_26_NOT_TAKEN.1.7.341=0, escSub([C)C_66_NOT_TAKEN.1.11.343=0, w8$343=2, escSub([C)C_66_NOT_TAKEN.1.11.341=0, w8$341=1, r-1.patParaIndex.1.5.334=0, escSub([C)C_66_NOT_TAKEN.1.11.345=0, esc([C)C_66_TAKEN.1.21.334=0, esc([C)C_50_NOT_TAKEN.1.7.334=0, escSub([C)C_66_NOT_TAKEN.1.3.343=0, r-1.subParaIndex.1.5.339=0, w8$337=1, escSub([C)C_66_NOT_TAKEN.1.3.345=0, r352[9].-1.11.335=0, r352[9].-1.11.336=0, esc([C)C_50_TAKEN.1.14.334=0, esc([C)C_66_NOT_TAKEN.1.18.334=0, i2_3_SYMINT=4, escSub([C)C_26_NOT_TAKEN.1.3.341=0, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, escSub([C)C_26_NOT_TAKEN.1.5.345=0, escSub([C)C_26_NOT_TAKEN.1.3.343=0, escSub([C)C_66_NOT_TAKEN.1.3.341=0, escSub([C)C_26_NOT_TAKEN.1.3.345=1, makepat([C[C)I_315_TAKEN.1.5.334=1, w6$341=1, escSub([C)C_26_NOT_TAKEN.1.5.341=0, r-1.patIndex.1.15.334=2, escSub([C)C_26_NOT_TAKEN.1.5.343=0, w6$345=3, w6$343=2, r352[1].-1.57.334=36, esc([C)C_50_TAKEN.1.16.334=0, w10$340=97, w25$334=36, w10$341=2, r352[6].-1.8.336=0, w25$333=36, w10$342=97, r-1.patParaIndex.1.3.334=1, esc([C)C_26_TAKEN.1.13.334=0, w10$343=3, w25$339=4, w10$344=50, w10$345=4, w24$341=97, w16$345=0, w24$343=50, r-1.subParaIndex.1.5.345=3, r354[2].-1.25.343=97, w16$341=97, r-1.subParaIndex.1.5.343=2, w16$343=50, r-1.subParaIndex.1.5.341=1, esc([C)C_26_TAKEN.1.3.334=1, esc([C)C_66_TAKEN.1.7.334=1, w24$345=0, esc([C)C_26_TAKEN.1.12.334=0, esc([C)C_66_NOT_TAKEN.1.20.334=0, w4$345=50, esc([C)C_66_NOT_TAKEN.1.12.334=0, r-1.subParaIndex.1.3.343=3, esc([C)C_66_NOT_TAKEN.1.7.334=0, w4$343=97, r-1.subParaIndex.1.3.341=2, w4$341=97, r352[2].-1.4.336=63, makepat([C[C)I_491_TAKEN.1.3.336=0, r352[2].-1.4.335=63, r-1.subParaIndex.1.3.345=3, esc([C)C_50_NOT_TAKEN.1.3.334=0, r-1.subParaIndex.1.7.343=2, esc([C)C_50_NOT_TAKEN.1.5.334=0, makepat([C[C)I_378_NOT_TAKEN.1.5.334=1, r-1.subParaIndex.1.7.341=1, r-1.subParaIndex.1.7.345=3, r354[3].-1.26.345=50, esc([C)C_66_NOT_TAKEN.1.5.334=0, w9$340=1, w9$342=2, esc([C)C_26_TAKEN.1.10.334=0, esc([C)C_26_TAKEN.1.5.334=0, esc([C)C_66_TAKEN.1.9.334=0, r-1.patParaIndex.1.8.334=1, r-1.patParaIndex.1.12.334=0, i1_2_SYMINT=63, w9$344=3, esc([C)C_66_NOT_TAKEN.1.14.334=0, w14$341=2, w14$343=3, r352[5].-1.7.336=0, w14$345=4, r352[5].-1.7.335=0, r-1.subParaIndex.1.7.339=0, r352[0].-1.66.334=99, w11$345=0, i0_1_SYMINT=36, w11$343=50, r352[1].-1.67.334=36, w7$341=97, r352[8].-1.10.335=0, w11$341=97, r352[8].-1.10.336=0, w7$343=97, w20$345=0, esc([C)C_50_TAKEN.1.7.334=0, w20$341=97, w20$343=50, esc([C)C_50_NOT_TAKEN.1.10.334=0, esc([C)C_66_TAKEN.1.3.334=1, r352[0].-1.56.334=99, esc([C)C_50_NOT_TAKEN.1.17.334=0, esc([C)C_66_TAKEN.1.16.334=1, w8$1=1, w7$345=50, r352[3].-1.5.336=0, r352[3].-1.5.335=0, esc([C)C_26_TAKEN.1.8.334=1, r352[4].-1.6.336=0, escSub([C)C_50_NOT_TAKEN.1.3.341=0, esc([C)C_66_TAKEN.1.18.334=0, r354[1].-1.24.341=97, esc([C)C_50_NOT_TAKEN.1.12.334=0, escSub([C)C_50_NOT_TAKEN.1.3.343=0, esc([C)C_66_NOT_TAKEN.1.21.334=0, escSub([C)C_50_NOT_TAKEN.1.3.345=0, r352[4].-1.6.335=0, esc([C)C_66_NOT_TAKEN.1.9.334=0, esc([C)C_66_TAKEN.1.5.334=1, r-1.patIndex.1.14.334=2}
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   a&athreadTerminated: 91
The solution is {}
c   &athreadTerminated: 92
The solution is {}
2   athreadTerminated: 93
The solution is {}
a   threadTerminated: 94
The solution is {}
&athreadTerminated: 95
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
a&athreadTerminated: 96
The solution is {}
c&athreadTerminated: 97
The solution is {}
2athreadTerminated: 98
The solution is {}
athreadTerminated: 99
The solution is {}
&athreadTerminated: 100
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.getccl([C[C)Z#57
18 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((! (>= w18 10 ) )) {
   19 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w19:<Primordial,C>] = w20
   21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w22 := (+ w21 1 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 22
} else {
   skip; 
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.getccl([C[C)Z#84
24 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((! (>= w24 10 ) )) {
   25 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w25:<Primordial,C>] = w26
   27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w28 := (+ w27 1 ); 
   putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 28
} else {
   skip; 
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
Challege: illegal pattern!
threadTerminated: 101
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#109
27 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
if ((! (!= w27 0 ) )) {
   28 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w28 10 ) )) {
      29 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w29:<Primordial,C>] = w26
      30 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w31 := (+ w30 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 31
   } else {
      skip; 
   }
} else {
   32 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w32 10 ) )) {
      33 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w33:<Primordial,C>] = w34
      35 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w36 := (+ w35 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 36
   } else {
      skip; 
   }
   38 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @162 exception:37
   39 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w39 10 ) )) {
      40 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w40:<Primordial,C>] = w38
      41 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w42 := (+ w41 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 42
   } else {
      skip; 
   }
}
w92 := (Gamma !(w27!=0) (Gamma !(w28>=10) w100 w100) w100); 
w93 := (Gamma !(w27!=0) (Gamma !(w28>=10) w9 w9) w9); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 102
The solution is {}
c2a&athreadTerminated: 103
The solution is {}
2a&athreadTerminated: 104
The solution is {}
a&athreadTerminated: 105
The solution is {}
&athreadTerminated: 106
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c2a&athreadTerminated: 107
The solution is {}
c2a&athreadTerminated: 108
The solution is {}
2a&athreadTerminated: 109
The solution is {}
a&athreadTerminated: 110
The solution is {}
&athreadTerminated: 111
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 112
The solution is {}
c2a&athreadTerminated: 113
The solution is {}
2a&athreadTerminated: 114
The solution is {}
a&athreadTerminated: 115
The solution is {}
&athreadTerminated: 116
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_set_2(C)Z#3
if ((! (!= w1 37 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_set_2(C)Z#11
if ((! (!= w1 36 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_set_2(C)Z#19
if ((! (!= w1 42 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.stclose([CI)V#18
if ((! (>= w7 10 ) )) {
   w9 = w1[w11:<Primordial,C>]
   w1[w7:<Primordial,C>] = w9
} else {
   skip; 
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.stclose([CI)V#18
if ((! (>= w7 10 ) )) {
   w9 = w1[w11:<Primordial,C>]
   w1[w7:<Primordial,C>] = w9
} else {
   skip; 
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#35
if ((! (!= w1 91 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#43
if ((! (!= w1 33 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.in_pat_set(C)Z#51
if ((! (!= w1 42 ) )) {
   return 4
} else {
   skip; 
}


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#88
w22 = w1[w2:<Primordial,C>]
if ((!= w22 91 )) {
   w27 = w1[w2:<Primordial,C>]
   if ((! (!= w27 33 ) )) {
      w29 := (+ w2 1 ); 
      w30 = w1[w29:<Primordial,C>]
      w31 := (+ w30 2 ); 
   } else {
      w32 = w1[w2:<Primordial,C>]
      if ((! (!= w32 42 ) )) {
         skip; 
      } else {
         w34 = w1[w2:<Primordial,C>]
         invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
      }
   }
} else {
   w24 := (+ w2 1 ); 
   w25 = w1[w24:<Primordial,C>]
   w26 := (+ w25 2 ); 
}
w36 := (Gamma w22!=91 (Gamma !(w27!=33) w31 (Gamma !(w32!=42) 1 -1)) w26); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w4$388]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#108
w27 = w1[w2:<Primordial,C>]
if ((! (!= w27 33 ) )) {
   w29 := (+ w2 1 ); 
   w30 = w1[w29:<Primordial,C>]
   w31 := (+ w30 2 ); 
} else {
   w32 = w1[w2:<Primordial,C>]
   if ((! (!= w32 42 ) )) {
      skip; 
   } else {
      w34 = w1[w2:<Primordial,C>]
      invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
   }
}
w36 := (Gamma !(w27!=33) w31 (Gamma !(w32!=42) 1 -1)); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w4$390]


---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.patsize([CI)I#128
w32 = w1[w2:<Primordial,C>]
if ((! (!= w32 42 ) )) {
   skip; 
} else {
   w34 = w1[w2:<Primordial,C>]
   invokestatic < Application, Ltcgbenchmarks/replace/replace11, CaseError(C)V > 34 @140 exception:35
}
w36 := (Gamma !(w32!=42) 1 -1); 


!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
Cannot summarize invoke in 
[] = invoke < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >[248, w4$392]

c   2c   ac   &c   athreadTerminated: 117
The solution is {}
    2    a    &    athreadTerminated: 118
The solution is {}
c   cc   ac   &c   athreadTerminated: 119
The solution is {}
c   2c   &c   threadTerminated: 120
The solution is {}
c   ac   athreadTerminated: 121
The solution is {}
c   &c   athreadTerminated: 122
The solution is {}
    c    a    &    athreadTerminated: 123
The solution is {}
    2    &    threadTerminated: 124
The solution is {}
    a    athreadTerminated: 125
The solution is {}
    &    athreadTerminated: 126
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   2   a   &   athreadTerminated: 127
The solution is {}
   c   a   &   athreadTerminated: 128
The solution is {}
   2   &   threadTerminated: 129
The solution is {}
   a   athreadTerminated: 130
The solution is {}
   &   athreadTerminated: 131
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
2a&athreadTerminated: 132
The solution is {}
ca&athreadTerminated: 133
The solution is {}
2&threadTerminated: 134
The solution is {}
aathreadTerminated: 135
The solution is {}
&athreadTerminated: 136
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#305
62 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
w63 = w1[w62:<Primordial,C>]
if ((!= w63 36 )) {
   82 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w82 10 ) )) {
      83 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w83:<Primordial,C>] = w34
      84 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w85 := (+ w84 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 85
   } else {
      skip; 
   }
   87 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @423 exception:86
   88 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   if ((! (>= w88 10 ) )) {
      89 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w2[w89:<Primordial,C>] = w87
      90 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      w91 := (+ w90 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 91
   } else {
      skip; 
   }
} else {
   65 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patParaIndex, <Primordial,I> >
   w66 := (+ w65 1 ); 
   w67 = w1[w66:<Primordial,C>]
   if ((! (!= w67 0 ) )) {
      68 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w68 10 ) )) {
         69 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w69:<Primordial,C>] = w64
         70 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w71 := (+ w70 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 71
      } else {
         skip; 
      }
   } else {
      72 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w72 10 ) )) {
         73 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w73:<Primordial,C>] = w34
         74 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w75 := (+ w74 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 75
      } else {
         skip; 
      }
      77 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, esc([C)C > 1 @368 exception:76
      78 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
      if ((! (>= w78 10 ) )) {
         79 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w2[w79:<Primordial,C>] = w77
         80 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
         w81 := (+ w80 1 ); 
         putstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> > = 81
      } else {
         skip; 
      }
   }
}
w92 := (Gamma w63!=36 (Gamma !(w88>=10) w100 w100) (Gamma !(w67!=0) (Gamma !(w68>=10) w100 w100) w100)); 
w93 := (Gamma w63!=36 (Gamma !(w88>=10) w9 w9) (Gamma !(w67!=0) (Gamma !(w68>=10) w9 w9) w9)); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   a&athreadTerminated: 137
The solution is {}
    a&athreadTerminated: 138
The solution is {}
c2a&athreadTerminated: 139
The solution is {}
c2a&athreadTerminated: 140
The solution is {}
cc   &athreadTerminated: 141
The solution is {}
    &athreadTerminated: 142
The solution is {}
2a&athreadTerminated: 143
The solution is {}
2a&athreadTerminated: 144
The solution is {}
2c   athreadTerminated: 145
The solution is {}
    athreadTerminated: 146
The solution is {}
a&athreadTerminated: 147
The solution is {}
a&athreadTerminated: 148
The solution is {}
ac   threadTerminated: 149
The solution is {}
    threadTerminated: 150
The solution is {}
&athreadTerminated: 151
The solution is {}
&athreadTerminated: 152
The solution is {}
&athreadTerminated: 153
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   a&athreadTerminated: 154
The solution is {}
c2a&athreadTerminated: 155
The solution is {}
c2a&athreadTerminated: 156
The solution is {}
c   &athreadTerminated: 157
The solution is {}
2a&athreadTerminated: 158
The solution is {}
2a&athreadTerminated: 159
The solution is {}
2   athreadTerminated: 160
The solution is {}
a&athreadTerminated: 161
The solution is {}
a&athreadTerminated: 162
The solution is {}
a   threadTerminated: 163
The solution is {}
&athreadTerminated: 164
The solution is {}
&athreadTerminated: 165
The solution is {}
&athreadTerminated: 166
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
a&athreadTerminated: 167
The solution is {}
c2a&athreadTerminated: 168
The solution is {}
c2a&athreadTerminated: 169
The solution is {}
c&athreadTerminated: 170
The solution is {}
2a&athreadTerminated: 171
The solution is {}
2a&athreadTerminated: 172
The solution is {}
2athreadTerminated: 173
The solution is {}
a&athreadTerminated: 174
The solution is {}
a&athreadTerminated: 175
The solution is {}
athreadTerminated: 176
The solution is {}
&athreadTerminated: 177
The solution is {}
&athreadTerminated: 178
The solution is {}
&athreadTerminated: 179
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   2a&athreadTerminated: 180
The solution is {}
    2a&athreadTerminated: 181
The solution is {}
cc   a&athreadTerminated: 182
The solution is {}
    a&athreadTerminated: 183
The solution is {}
2c   &c   threadTerminated: 184
The solution is {}
    &    threadTerminated: 185
The solution is {}
ac   athreadTerminated: 186
The solution is {}
    athreadTerminated: 187
The solution is {}
&athreadTerminated: 188
The solution is {}
c2a&athreadTerminated: 189
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   2a&athreadTerminated: 190
The solution is {}
c   a&athreadTerminated: 191
The solution is {}
2   &   threadTerminated: 192
The solution is {}
a   athreadTerminated: 193
The solution is {}
&athreadTerminated: 194
The solution is {}
c2a&athreadTerminated: 195
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
2a&athreadTerminated: 196
The solution is {}
ca&athreadTerminated: 197
The solution is {}
2&threadTerminated: 198
The solution is {}
aathreadTerminated: 199
The solution is {}
&athreadTerminated: 200
The solution is {}
c2a&athreadTerminated: 201
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makepat([C[C)I#491
101 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
if ((>= w101 10 )) {
   skip; 
} else {
   102 = getstatic < Application, Ltcgbenchmarks/replace/replace11, patIndex, <Primordial,I> >
   w2[w102:<Primordial,C>] = w4
}
w103 := (Gamma w101>=10 0 1); 


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   2a&athreadTerminated: 202

The solution is {r-1.subParaIndex.1.7.431=0, escSub([C)C_66_NOT_TAKEN.1.3.433=0, r-1.subParaIndex.1.7.435=2, escSub([C)C_66_NOT_TAKEN.1.3.435=0, esc([C)C_50_NOT_TAKEN.1.14.334=0, r-1.patParaIndex.1.13.334=1, esc([C)C_50_TAKEN.1.3.334=1, r354[1].-1.24.433=97, r-1.subParaIndex.1.7.433=1, esc([C)C_50_TAKEN.1.17.334=1, escSub([C)C_66_NOT_TAKEN.1.3.437=0, w6$437=3, escSub([C)C_26_NOT_TAKEN.1.5.437=0, w6$435=2, escSub([C)C_26_NOT_TAKEN.1.5.433=0, escSub([C)C_26_NOT_TAKEN.1.5.435=0, escSub([C)C_26_NOT_TAKEN.1.3.433=0, escSub([C)C_26_NOT_TAKEN.1.3.435=0, escSub([C)C_26_NOT_TAKEN.1.3.437=1, w6$433=1, esc([C)C_66_TAKEN.1.12.334=1, r354[2].-1.25.435=97, r-1.subParaIndex.1.5.437=3, w11$433=97, r-1.subParaIndex.1.5.435=2, w8$437=3, r-1.subParaIndex.1.5.433=1, w8$435=2, r-1.subParaIndex.1.5.431=0, esc([C)C_50_NOT_TAKEN.1.16.334=0, w8$433=1, esc([C)C_50_TAKEN.1.5.334=1, w24$437=0, escSub([C)C_66_NOT_TAKEN.1.5.433=0, escSub([C)C_66_NOT_TAKEN.1.5.435=0, esc([C)C_50_TAKEN.1.10.334=1, escSub([C)C_26_NOT_TAKEN.1.7.433=0, w24$433=97, makepat([C[C)I_349_NOT_TAKEN.1.7.334=0, escSub([C)C_26_NOT_TAKEN.1.7.435=0, w11$437=0, w24$435=50, esc([C)C_66_TAKEN.1.20.334=1, escSub([C)C_26_NOT_TAKEN.1.7.437=0, w11$435=50, escSub([C)C_66_NOT_TAKEN.1.5.437=0, esc([C)C_66_TAKEN.1.14.334=1, r-1.subParaIndex.1.3.435=3, r-1.subParaIndex.1.3.433=2, makepat([C[C)I_491_TAKEN.1.3.428=0, r-1.subParaIndex.1.3.437=3, esc([C)C_66_NOT_TAKEN.1.3.334=0, esc([C)C_50_TAKEN.1.12.334=1, escSub([C)C_50_NOT_TAKEN.1.3.437=0, makepat([C[C)I_349_NOT_TAKEN.1.5.334=1, makepat([C[C)I_12_TAKEN.1.3.1=0, esc([C)C_66_NOT_TAKEN.1.16.334=0, makepat([C[C)I_378_NOT_TAKEN.1.7.334=0, escSub([C)C_66_NOT_TAKEN.1.9.437=0, escSub([C)C_50_NOT_TAKEN.1.3.433=0, escSub([C)C_66_NOT_TAKEN.1.9.433=0, escSub([C)C_50_NOT_TAKEN.1.3.435=0, escSub([C)C_66_NOT_TAKEN.1.9.435=0, escSub([C)C_66_NOT_TAKEN.1.7.433=0, escSub([C)C_66_NOT_TAKEN.1.7.435=0, escSub([C)C_66_NOT_TAKEN.1.7.437=0, makepat([C[C)I_315_TAKEN.1.3.334=1, r-1.patParaIndex.1.10.334=1, w14$433=2, w14$435=3, r-1.patParaIndex.1.5.334=1, w14$437=4, esc([C)C_66_TAKEN.1.21.334=1, esc([C)C_50_NOT_TAKEN.1.7.334=0, w3$437=3, w16$433=97, w16$435=50, w20$437=0, esc([C)C_50_TAKEN.1.14.334=1, esc([C)C_66_NOT_TAKEN.1.18.334=0, w20$433=97, i2_3_SYMINT=38, w20$435=50, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, r-1.patIndex.1.15.334=2, makepat([C[C)I_315_TAKEN.1.5.334=0, r352[1].-1.57.334=99, esc([C)C_50_TAKEN.1.16.334=1, w25$334=99, r-1.subParaIndex.1.7.437=3, w25$333=99, r-1.patParaIndex.1.3.334=1, esc([C)C_26_TAKEN.1.13.334=1, w3$433=1, w16$437=0, w3$435=2, escSub([C)C_50_NOT_TAKEN.1.7.433=0, esc([C)C_26_TAKEN.1.3.334=1, esc([C)C_66_TAKEN.1.7.334=1, escSub([C)C_50_NOT_TAKEN.1.7.435=0, escSub([C)C_50_NOT_TAKEN.1.7.437=0, esc([C)C_26_TAKEN.1.12.334=1, escSub([C)C_50_NOT_TAKEN.1.9.435=0, w10$435=3, r352[0].-1.2.428=99, w10$436=50, esc([C)C_66_NOT_TAKEN.1.20.334=0, escSub([C)C_50_NOT_TAKEN.1.9.437=0, w10$437=4, esc([C)C_66_NOT_TAKEN.1.12.334=0, esc([C)C_66_NOT_TAKEN.1.7.334=0, escSub([C)C_50_NOT_TAKEN.1.9.433=0, esc([C)C_50_NOT_TAKEN.1.3.334=0, w10$432=97, w10$433=2, w10$434=97, esc([C)C_50_NOT_TAKEN.1.5.334=0, makepat([C[C)I_378_NOT_TAKEN.1.5.334=1, escSub([C)C_50_NOT_TAKEN.1.5.433=0, esc([C)C_66_NOT_TAKEN.1.5.334=0, escSub([C)C_50_NOT_TAKEN.1.5.435=0, esc([C)C_26_TAKEN.1.10.334=1, escSub([C)C_50_NOT_TAKEN.1.5.437=0, esc([C)C_26_TAKEN.1.5.334=1, esc([C)C_66_TAKEN.1.9.334=1, r-1.patParaIndex.1.8.334=1, r-1.patParaIndex.1.12.334=1, i1_2_SYMINT=99, esc([C)C_66_NOT_TAKEN.1.14.334=0, w7$433=97, w25$433=97, w7$435=97, w25$431=38, w7$437=50, r352[0].-1.66.334=99, w25$437=50, w25$435=97, r354[3].-1.26.437=50, i0_1_SYMINT=64, r352[1].-1.67.334=99, esc([C)C_50_TAKEN.1.7.334=1, w13$435=2, w13$433=1, w8$429=1, w13$437=3, w9$436=3, esc([C)C_50_NOT_TAKEN.1.10.334=0, w9$432=1, esc([C)C_66_TAKEN.1.3.334=1, w9$434=2, r352[0].-1.56.334=99, esc([C)C_50_NOT_TAKEN.1.17.334=0, esc([C)C_66_TAKEN.1.16.334=1, w8$1=1, esc([C)C_26_TAKEN.1.8.334=1, r352[1].-1.3.428=99, r354[0].-1.23.431=65535, esc([C)C_66_TAKEN.1.18.334=1, esc([C)C_50_NOT_TAKEN.1.12.334=0, esc([C)C_66_NOT_TAKEN.1.21.334=0, w4$437=50, w4$435=97, escSub([C)C_66_NOT_TAKEN.1.11.437=0, esc([C)C_66_NOT_TAKEN.1.9.334=0, w4$433=97, esc([C)C_66_TAKEN.1.5.334=1, w103$428=1, escSub([C)C_66_NOT_TAKEN.1.11.435=0, r-1.patIndex.1.14.334=2, escSub([C)C_66_NOT_TAKEN.1.11.433=0}
The solution is {}
    2a&athreadTerminated: 203
The solution is {}
cc   a&athreadTerminated: 204
The solution is {}
    a&athreadTerminated: 205
The solution is {}
2c   &c   threadTerminated: 206
The solution is {}
    &    threadTerminated: 207
The solution is {}
ac   athreadTerminated: 208
The solution is {}
    athreadTerminated: 209
The solution is {}
&athreadTerminated: 210

The solution is {r-1.subParaIndex.1.7.431=0, escSub([C)C_66_NOT_TAKEN.1.3.433=0, r-1.subParaIndex.1.7.435=2, escSub([C)C_66_NOT_TAKEN.1.3.435=0, esc([C)C_50_NOT_TAKEN.1.14.334=1, r-1.patParaIndex.1.13.334=1, esc([C)C_50_TAKEN.1.3.334=0, r-1.subParaIndex.1.7.433=1, escSub([C)C_66_NOT_TAKEN.1.3.437=0, r354[1].-1.24.433=97, esc([C)C_50_TAKEN.1.17.334=0, w6$437=3, escSub([C)C_26_NOT_TAKEN.1.5.437=0, w6$435=2, escSub([C)C_26_NOT_TAKEN.1.5.433=0, escSub([C)C_26_NOT_TAKEN.1.5.435=0, escSub([C)C_26_NOT_TAKEN.1.3.433=0, escSub([C)C_26_NOT_TAKEN.1.3.435=0, escSub([C)C_26_NOT_TAKEN.1.3.437=1, w6$433=1, esc([C)C_66_TAKEN.1.12.334=1, r-1.subParaIndex.1.5.437=3, r354[2].-1.25.435=97, w11$433=97, r-1.subParaIndex.1.5.435=2, w8$437=3, r-1.subParaIndex.1.5.433=1, w8$435=2, r-1.subParaIndex.1.5.431=0, esc([C)C_50_NOT_TAKEN.1.16.334=1, w8$433=1, esc([C)C_50_TAKEN.1.5.334=0, w24$437=0, escSub([C)C_66_NOT_TAKEN.1.5.433=0, escSub([C)C_66_NOT_TAKEN.1.5.435=0, esc([C)C_50_TAKEN.1.10.334=0, escSub([C)C_26_NOT_TAKEN.1.7.433=0, w24$433=97, makepat([C[C)I_349_NOT_TAKEN.1.7.334=0, escSub([C)C_26_NOT_TAKEN.1.7.435=0, w11$437=0, w24$435=50, esc([C)C_66_TAKEN.1.20.334=0, escSub([C)C_26_NOT_TAKEN.1.7.437=0, w11$435=50, escSub([C)C_66_NOT_TAKEN.1.5.437=0, esc([C)C_66_TAKEN.1.14.334=0, r-1.subParaIndex.1.3.435=3, r-1.subParaIndex.1.3.433=2, makepat([C[C)I_491_TAKEN.1.3.428=0, r-1.subParaIndex.1.3.437=3, esc([C)C_66_NOT_TAKEN.1.3.334=0, esc([C)C_50_TAKEN.1.12.334=0, escSub([C)C_50_NOT_TAKEN.1.3.437=0, makepat([C[C)I_349_NOT_TAKEN.1.5.334=1, makepat([C[C)I_12_TAKEN.1.3.1=0, esc([C)C_66_NOT_TAKEN.1.16.334=0, makepat([C[C)I_378_NOT_TAKEN.1.7.334=0, escSub([C)C_66_NOT_TAKEN.1.9.437=0, escSub([C)C_50_NOT_TAKEN.1.3.433=0, escSub([C)C_66_NOT_TAKEN.1.9.433=0, escSub([C)C_50_NOT_TAKEN.1.3.435=0, escSub([C)C_66_NOT_TAKEN.1.9.435=0, escSub([C)C_66_NOT_TAKEN.1.7.433=0, escSub([C)C_66_NOT_TAKEN.1.7.435=0, escSub([C)C_66_NOT_TAKEN.1.7.437=0, makepat([C[C)I_315_TAKEN.1.3.334=1, r-1.patParaIndex.1.10.334=1, w14$433=2, w14$435=3, r-1.patParaIndex.1.5.334=1, w14$437=4, esc([C)C_50_NOT_TAKEN.1.7.334=1, esc([C)C_66_TAKEN.1.21.334=0, w3$437=3, w16$433=97, w16$435=50, w20$437=0, esc([C)C_50_TAKEN.1.14.334=0, esc([C)C_66_NOT_TAKEN.1.18.334=0, w20$433=97, i2_3_SYMINT=4096, w20$435=50, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, r-1.patIndex.1.15.334=2, makepat([C[C)I_315_TAKEN.1.5.334=0, r352[1].-1.57.334=10, esc([C)C_50_TAKEN.1.16.334=0, w25$334=10, r-1.subParaIndex.1.7.437=3, w25$333=10, r-1.patParaIndex.1.3.334=1, w3$433=1, esc([C)C_26_TAKEN.1.13.334=1, w16$437=0, w3$435=2, escSub([C)C_50_NOT_TAKEN.1.7.433=0, esc([C)C_26_TAKEN.1.3.334=1, esc([C)C_66_TAKEN.1.7.334=0, escSub([C)C_50_NOT_TAKEN.1.7.435=0, escSub([C)C_50_NOT_TAKEN.1.7.437=0, esc([C)C_26_TAKEN.1.12.334=1, escSub([C)C_50_NOT_TAKEN.1.9.435=0, w10$435=3, r352[0].-1.2.428=99, w10$436=50, esc([C)C_66_NOT_TAKEN.1.20.334=0, escSub([C)C_50_NOT_TAKEN.1.9.437=0, w10$437=4, esc([C)C_66_NOT_TAKEN.1.12.334=0, esc([C)C_66_NOT_TAKEN.1.7.334=0, escSub([C)C_50_NOT_TAKEN.1.9.433=0, esc([C)C_50_NOT_TAKEN.1.3.334=1, w10$432=97, w10$433=2, w10$434=97, esc([C)C_50_NOT_TAKEN.1.5.334=1, makepat([C[C)I_378_NOT_TAKEN.1.5.334=1, escSub([C)C_50_NOT_TAKEN.1.5.433=0, esc([C)C_66_NOT_TAKEN.1.5.334=0, escSub([C)C_50_NOT_TAKEN.1.5.435=0, esc([C)C_26_TAKEN.1.10.334=1, escSub([C)C_50_NOT_TAKEN.1.5.437=0, esc([C)C_26_TAKEN.1.5.334=1, esc([C)C_66_TAKEN.1.9.334=0, r-1.patParaIndex.1.8.334=1, r-1.patParaIndex.1.12.334=1, i1_2_SYMINT=110, esc([C)C_66_NOT_TAKEN.1.14.334=0, w7$433=97, w25$433=97, w7$435=97, w25$431=4096, w7$437=50, r352[0].-1.66.334=99, w25$437=50, w25$435=97, r354[3].-1.26.437=50, i0_1_SYMINT=64, r352[1].-1.67.334=10, esc([C)C_50_TAKEN.1.7.334=0, w13$435=2, w13$433=1, w8$429=1, w13$437=3, w9$436=3, esc([C)C_50_NOT_TAKEN.1.10.334=1, w9$432=1, esc([C)C_66_TAKEN.1.3.334=1, w9$434=2, r352[0].-1.56.334=99, esc([C)C_50_NOT_TAKEN.1.17.334=1, esc([C)C_66_TAKEN.1.16.334=0, w8$1=1, esc([C)C_26_TAKEN.1.8.334=1, r352[1].-1.3.428=10, r354[0].-1.23.431=4096, esc([C)C_66_TAKEN.1.18.334=0, esc([C)C_50_NOT_TAKEN.1.12.334=1, esc([C)C_66_NOT_TAKEN.1.21.334=0, w4$437=50, w4$435=97, escSub([C)C_66_NOT_TAKEN.1.11.437=0, esc([C)C_66_NOT_TAKEN.1.9.334=0, w4$433=97, esc([C)C_66_TAKEN.1.5.334=0, w103$428=1, escSub([C)C_66_NOT_TAKEN.1.11.435=0, r-1.patIndex.1.14.334=2, escSub([C)C_66_NOT_TAKEN.1.11.433=0}

The solution is {r-1.subParaIndex.1.7.431=0, escSub([C)C_66_NOT_TAKEN.1.3.433=0, r-1.subParaIndex.1.7.435=2, escSub([C)C_66_NOT_TAKEN.1.3.435=0, esc([C)C_50_NOT_TAKEN.1.14.334=0, r-1.patParaIndex.1.13.334=1, esc([C)C_50_TAKEN.1.3.334=1, r-1.subParaIndex.1.7.433=1, escSub([C)C_66_NOT_TAKEN.1.3.437=0, r354[1].-1.24.433=97, esc([C)C_50_TAKEN.1.17.334=1, w6$437=3, escSub([C)C_26_NOT_TAKEN.1.5.437=0, w6$435=2, escSub([C)C_26_NOT_TAKEN.1.5.433=0, escSub([C)C_26_NOT_TAKEN.1.5.435=0, escSub([C)C_26_NOT_TAKEN.1.3.433=0, escSub([C)C_26_NOT_TAKEN.1.3.435=0, escSub([C)C_26_NOT_TAKEN.1.3.437=1, w6$433=1, esc([C)C_66_TAKEN.1.12.334=0, r-1.subParaIndex.1.5.437=3, r354[2].-1.25.435=97, w11$433=97, r-1.subParaIndex.1.5.435=2, w8$437=3, r-1.subParaIndex.1.5.433=1, w8$435=2, r-1.subParaIndex.1.5.431=0, esc([C)C_50_NOT_TAKEN.1.16.334=0, w8$433=1, esc([C)C_50_TAKEN.1.5.334=1, w24$437=0, escSub([C)C_66_NOT_TAKEN.1.5.433=0, escSub([C)C_66_NOT_TAKEN.1.5.435=0, esc([C)C_50_TAKEN.1.10.334=1, escSub([C)C_26_NOT_TAKEN.1.7.433=0, w24$433=97, makepat([C[C)I_349_NOT_TAKEN.1.7.334=0, escSub([C)C_26_NOT_TAKEN.1.7.435=0, w11$437=0, w24$435=50, esc([C)C_66_TAKEN.1.20.334=0, escSub([C)C_26_NOT_TAKEN.1.7.437=0, w11$435=50, escSub([C)C_66_NOT_TAKEN.1.5.437=0, esc([C)C_66_TAKEN.1.14.334=0, r-1.subParaIndex.1.3.435=3, r-1.subParaIndex.1.3.433=2, makepat([C[C)I_491_TAKEN.1.3.428=0, r-1.subParaIndex.1.3.437=3, esc([C)C_66_NOT_TAKEN.1.3.334=1, esc([C)C_50_TAKEN.1.12.334=1, escSub([C)C_50_NOT_TAKEN.1.3.437=0, makepat([C[C)I_349_NOT_TAKEN.1.5.334=1, makepat([C[C)I_12_TAKEN.1.3.1=0, esc([C)C_66_NOT_TAKEN.1.16.334=1, makepat([C[C)I_378_NOT_TAKEN.1.7.334=0, escSub([C)C_66_NOT_TAKEN.1.9.437=0, escSub([C)C_50_NOT_TAKEN.1.3.433=0, escSub([C)C_66_NOT_TAKEN.1.9.433=0, escSub([C)C_50_NOT_TAKEN.1.3.435=0, escSub([C)C_66_NOT_TAKEN.1.9.435=0, escSub([C)C_66_NOT_TAKEN.1.7.433=0, escSub([C)C_66_NOT_TAKEN.1.7.435=0, escSub([C)C_66_NOT_TAKEN.1.7.437=0, makepat([C[C)I_315_TAKEN.1.3.334=1, r-1.patParaIndex.1.10.334=1, w14$433=2, w14$435=3, r-1.patParaIndex.1.5.334=1, w14$437=4, esc([C)C_50_NOT_TAKEN.1.7.334=0, esc([C)C_66_TAKEN.1.21.334=0, w3$437=3, w16$433=97, w16$435=50, w20$437=0, esc([C)C_50_TAKEN.1.14.334=1, esc([C)C_66_NOT_TAKEN.1.18.334=1, w20$433=97, i2_3_SYMINT=512, w20$435=50, makepat([C[C)I_12_NOT_TAKEN.1.3.1=1, r-1.patIndex.1.15.334=2, makepat([C[C)I_315_TAKEN.1.5.334=0, r352[1].-1.57.334=9, esc([C)C_50_TAKEN.1.16.334=1, w25$334=9, r-1.subParaIndex.1.7.437=3, w25$333=9, r-1.patParaIndex.1.3.334=1, w3$433=1, esc([C)C_26_TAKEN.1.13.334=1, w16$437=0, w3$435=2, escSub([C)C_50_NOT_TAKEN.1.7.433=0, esc([C)C_26_TAKEN.1.3.334=1, esc([C)C_66_TAKEN.1.7.334=0, escSub([C)C_50_NOT_TAKEN.1.7.435=0, escSub([C)C_50_NOT_TAKEN.1.7.437=0, esc([C)C_26_TAKEN.1.12.334=1, escSub([C)C_50_NOT_TAKEN.1.9.435=0, w10$435=3, r352[0].-1.2.428=99, w10$436=50, esc([C)C_66_NOT_TAKEN.1.20.334=1, escSub([C)C_50_NOT_TAKEN.1.9.437=0, w10$437=4, esc([C)C_66_NOT_TAKEN.1.12.334=1, esc([C)C_66_NOT_TAKEN.1.7.334=1, escSub([C)C_50_NOT_TAKEN.1.9.433=0, esc([C)C_50_NOT_TAKEN.1.3.334=0, w10$432=97, w10$433=2, w10$434=97, esc([C)C_50_NOT_TAKEN.1.5.334=0, makepat([C[C)I_378_NOT_TAKEN.1.5.334=1, escSub([C)C_50_NOT_TAKEN.1.5.433=0, esc([C)C_66_NOT_TAKEN.1.5.334=1, escSub([C)C_50_NOT_TAKEN.1.5.435=0, esc([C)C_26_TAKEN.1.10.334=1, escSub([C)C_50_NOT_TAKEN.1.5.437=0, esc([C)C_26_TAKEN.1.5.334=1, esc([C)C_66_TAKEN.1.9.334=0, r-1.patParaIndex.1.8.334=1, r-1.patParaIndex.1.12.334=1, i1_2_SYMINT=116, esc([C)C_66_NOT_TAKEN.1.14.334=1, w7$433=97, w25$433=97, w7$435=97, w25$431=512, w7$437=50, r352[0].-1.66.334=99, w25$437=50, w25$435=97, r354[3].-1.26.437=50, i0_1_SYMINT=64, r352[1].-1.67.334=9, esc([C)C_50_TAKEN.1.7.334=1, w13$435=2, w13$433=1, w8$429=1, w13$437=3, w9$436=3, esc([C)C_50_NOT_TAKEN.1.10.334=0, w9$432=1, esc([C)C_66_TAKEN.1.3.334=0, w9$434=2, r352[0].-1.56.334=99, esc([C)C_66_TAKEN.1.16.334=0, esc([C)C_50_NOT_TAKEN.1.17.334=0, w8$1=1, esc([C)C_26_TAKEN.1.8.334=1, r352[1].-1.3.428=9, r354[0].-1.23.431=512, esc([C)C_66_TAKEN.1.18.334=0, esc([C)C_50_NOT_TAKEN.1.12.334=0, esc([C)C_66_NOT_TAKEN.1.21.334=1, w4$437=50, w4$435=97, escSub([C)C_66_NOT_TAKEN.1.11.437=0, esc([C)C_66_NOT_TAKEN.1.9.334=1, w4$433=97, esc([C)C_66_TAKEN.1.5.334=0, w103$428=1, escSub([C)C_66_NOT_TAKEN.1.11.435=0, r-1.patIndex.1.14.334=2, escSub([C)C_66_NOT_TAKEN.1.11.433=0}
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   2a&athreadTerminated: 211
The solution is {}
c   a&athreadTerminated: 212
The solution is {}
2   &   threadTerminated: 213
The solution is {}
a   athreadTerminated: 214
The solution is {}
&athreadTerminated: 215
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
2a&athreadTerminated: 216
The solution is {}
ca&athreadTerminated: 217
The solution is {}
2&threadTerminated: 218
The solution is {}
aathreadTerminated: 219
The solution is {}
&athreadTerminated: 220
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#7
5 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w6 = w1[w5:<Primordial,C>]
if ((! (== w6 0 ) )) {
   skip; 
} else {
   skip; 
}
w8 := (Gamma !(w6==0) 1 0); 


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


region summary single path optimization applied.

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
c   cc   2c   ac   &c   athreadTerminated: 221

The solution is {w8$448=2, r354[0].-1.23.444=65535, w8$446=1, w13$450=3, escSub([C)C_50_NOT_TAKEN.1.3.450=0, escSub([C)C_66_NOT_TAKEN.1.7.450=0, escSub([C)C_66_NOT_TAKEN.1.5.446=0, escSub([C)C_26_NOT_TAKEN.1.7.446=0, w11$448=50, escSub([C)C_26_NOT_TAKEN.1.7.448=0, w11$446=97, escSub([C)C_66_NOT_TAKEN.1.5.448=0, escSub([C)C_66_NOT_TAKEN.1.9.450=0, w8$442=1, r354[1].-1.24.446=97, escSub([C)C_50_NOT_TAKEN.1.3.448=0, escSub([C)C_66_NOT_TAKEN.1.3.446=0, escSub([C)C_66_NOT_TAKEN.1.3.448=0, w6$448=2, escSub([C)C_26_NOT_TAKEN.1.5.448=0, w6$446=1, escSub([C)C_50_NOT_TAKEN.1.3.446=0, escSub([C)C_26_NOT_TAKEN.1.5.446=0, escSub([C)C_26_NOT_TAKEN.1.3.446=0, escSub([C)C_26_NOT_TAKEN.1.3.448=0, w3$450=3, w3$448=2, r-1.subParaIndex.1.5.448=2, r354[2].-1.25.448=97, r-1.subParaIndex.1.5.446=1, w16$446=97, makepat([C[C)I_12_TAKEN.1.3.1=1, r-1.subParaIndex.1.5.444=0, escSub([C)C_26_NOT_TAKEN.1.3.450=1, r-1.subParaIndex.1.7.450=3, escSub([C)C_66_NOT_TAKEN.1.3.450=0, w6$450=3, escSub([C)C_26_NOT_TAKEN.1.5.450=0, r-1.subParaIndex.1.3.446=2, w10$450=4, w25$444=65535, r-1.subParaIndex.1.7.448=2, w16$448=50, w25$448=97, r-1.subParaIndex.1.3.448=3, w3$446=1, w25$446=97, escSub([C)C_66_NOT_TAKEN.1.5.450=0, r-1.subParaIndex.1.7.446=1, r-1.subParaIndex.1.7.444=0, i2_3_SYMINT=65535, escSub([C)C_66_NOT_TAKEN.1.9.448=0, r-1.subParaIndex.1.5.450=3, makepat([C[C)I_12_NOT_TAKEN.1.3.1=0, escSub([C)C_66_NOT_TAKEN.1.9.446=0, r-1.subParaIndex.1.3.450=3, escSub([C)C_66_NOT_TAKEN.1.7.446=0, escSub([C)C_66_NOT_TAKEN.1.7.448=0, escSub([C)C_26_NOT_TAKEN.1.7.450=0, w25$450=50, w8$450=3, w14$446=2, w14$448=3, w20$448=50, w20$446=97, r354[3].-1.26.450=50, escSub([C)C_66_NOT_TAKEN.1.11.448=0, w14$450=4, w7$446=97, escSub([C)C_66_NOT_TAKEN.1.11.446=0, w7$448=97, w16$450=0, w20$450=0, w10$446=2, w10$447=97, w10$448=3, w10$449=50, i1_2_SYMINT=-2147483648, w4$450=50, escSub([C)C_66_NOT_TAKEN.1.11.450=0, w10$445=97, i0_1_SYMINT=0, escSub([C)C_50_NOT_TAKEN.1.7.450=0, w24$448=50, escSub([C)C_50_NOT_TAKEN.1.5.446=0, w24$446=97, w4$448=97, escSub([C)C_50_NOT_TAKEN.1.5.448=0, w4$446=97, w8$1=0, escSub([C)C_50_NOT_TAKEN.1.9.450=0, w24$450=0, w7$450=50, w11$450=0, escSub([C)C_50_NOT_TAKEN.1.5.450=0, w13$446=1, escSub([C)C_50_NOT_TAKEN.1.7.446=0, escSub([C)C_50_NOT_TAKEN.1.7.448=0, w13$448=2, escSub([C)C_50_NOT_TAKEN.1.9.446=0, w9$447=2, escSub([C)C_50_NOT_TAKEN.1.9.448=0, w9$449=3, w9$445=1}
The solution is {}
    c    2    a    &    athreadTerminated: 222
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG

---------- STARTING Transformations for conditional region: tcgbenchmarks.replace.replace11.makesub([C[C)I#23
9 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subParaIndex, <Primordial,I> >
w10 = w1[w9:<Primordial,C>]
if ((! (!= w10 38 ) )) {
   13 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w13 10 ) )) {
      15 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w15:<Primordial,C>] = w12
      16 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w17 := (+ w16 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 17
   } else {
      skip; 
   }
} else {
   19 = invokestatic < Application, Ltcgbenchmarks/replace/replace11, escSub([C)C > 1 @55 exception:18
   20 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
   if ((! (>= w20 10 ) )) {
      21 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w2[w21:<Primordial,C>] = w19
      22 = getstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> >
      w23 := (+ w22 1 ); 
      putstatic < Application, Ltcgbenchmarks/replace/replace11, subIndex, <Primordial,I> > = 23
   } else {
      skip; 
   }
}


------------- Region was successfully veritested --------------- 

=========Executing static region choice in BranchCG
   c   2   a   &   athreadTerminated: 223
The solution is {}

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint

=========Executing then .  Instruction: 

=========Executing else .  Instruction: 

=========Executing early retrun choice in BranchCG
found an unsat constraint
Challege: illegal sub
c2a&athreadTerminated: 224

====================================================== VeritestingListener report:
Encountered Veritesting Regions in veriRegions (i.e., VeriTestingMain.veriRegions size) = 117

/************************ Printing Exception Statistics *****************
Static Analysis exceptions count = 37
Instantiation Time exceptions count = 32
Unknown phases exception count = 0
FindStructuredBlockEndNode: mal-formed region: (34, StaticAnalysisPhase)
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.SPFCaseStmt value: SPFCaseStmt( MULTIPLE,0==0) seen in NoSkipVisitor: (1, InstantiationPhase)
region instantiation is not beneficial (1,1): (20, InstantiationPhase)
Unsupported class: gov.nasa.jpf.symbc.veritesting.ast.def.ReturnInstruction value: 
 return 1 seen in NoSkipVisitor: (7, InstantiationPhase)
region contains condition that cannot be instantiated: (1, StaticAnalysisPhase)
region instantiation is not beneficial (2,2): (3, InstantiationPhase)
Untranslatable instruction in SSAToStatIVisitor: (2, StaticAnalysisPhase)
region instantiation is not beneficial (3,3): (1, InstantiationPhase)


/************************ Printing Time Decomposition Statistics *****************
static analysis time = 2584 msec
Veritesting Dyn Time = 1259513 msec
Veritesting fix-point Time = 0 msec
GoTo rewrite instances = 0

/************************ Printing Solver Statistics *****************
Total Solver Queries Count = 17140
Total Solver Time = 1233314 msec
Total Solver Parse Time = 202140 msec
Region Summary Parse Time = 0 msec
Total Solver Clean up Time = 4624 msec
PCSatSolverCount = 390
PCSatSolverTime = 17528 msec
Constant Propagation Time for PC sat. checks = 34
Array SPF Case count = 1703
If-removed count = 1168

/************************ Printing Region Statistics *****************
Number of Distinct Veritested Regions = 14
Number of Distinct Un-Veritested Symbolic Regions = 47
Number of Distinct Failed Regions for Field Reference = 0
Number of Distinct Failed Regions for SPFCases = 0
Number of Distinct Failed Regions for missing method summaries = 15
Number of Distinct Failed Regions for Other Reasons = 32
Number of High Order Regions Used = 144

/************************ Printing Instantiation Statistics *****************
Number of successful instantiations = 214
Total Number of unsuccessful instantiations = 47
Number of failed instantiations due to Field Reference = 0
Number of failed instantiations due to SPFCases = 0
Number of failed instantiations due to missing method summaries = 15
Number of failed instantiations due to Other Reasons = 32


Number of Veritested Regions Instances = 214
Printing keys of regions that were instantiated at least once
tcgbenchmarks.replace.replace11.esc([C)C#7
tcgbenchmarks.replace.replace11.getccl([C[C)Z#57
tcgbenchmarks.replace.replace11.getccl([C[C)Z#84
tcgbenchmarks.replace.replace11.makepat([C[C)I#109
tcgbenchmarks.replace.replace11.makepat([C[C)I#12
tcgbenchmarks.replace.replace11.makepat([C[C)I#305
tcgbenchmarks.replace.replace11.makepat([C[C)I#43
tcgbenchmarks.replace.replace11.makepat([C[C)I#458
tcgbenchmarks.replace.replace11.makepat([C[C)I#491
tcgbenchmarks.replace.replace11.makesub([C[C)I#23
tcgbenchmarks.replace.replace11.makesub([C[C)I#7
tcgbenchmarks.replace.replace11.omatch([C[CI)Z#241
tcgbenchmarks.replace.replace11.omatch([C[CI)Z#64
tcgbenchmarks.replace.replace11.stclose([CI)V#18
Finished printing keys of regions that were instantiated at least once

Metrics Vector:
1262097,2584,1259513,224,17140,1233314,202140,4624,14,47,0,0,0,15,32,144,59,214,47,0,0,0,15,32,655716,61628,10,26,4.017241379310345,37,32,0

====================================================== Branch Coverage report:
Obligation -----> Coverage:
tcgbenchmarks.replace.replace11.putsub([CII[C)V.20.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.51.TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.37.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.escSub([C)C.66.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.32.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.362.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.227.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.315.TAKEN -----> true 
tcgbenchmarks.replace.replace11.locate(C[CI)Z.12.TAKEN -----> true 
tcgbenchmarks.replace.replace11.esc([C)C.50.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.esc([C)C.26.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.143.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.433.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makesub([C[C)I.64.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.mainProcess(CCCCCCCCCCC)V.37.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.84.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.16.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.64.TAKEN -----> true 
tcgbenchmarks.replace.replace11.stclose([CI)V.18.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.mainProcess(CCCCCCCCCCC)V.37.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.76.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.51.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makesub([C[C)I.13.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.3.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.35.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.212.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.40.TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.40.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.19.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.135.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.11.TAKEN -----> true 
tcgbenchmarks.replace.replace11.escSub([C)C.26.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.160.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.112.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.277.TAKEN -----> false 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.15.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.74.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.172.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.433.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.160.TAKEN -----> false 
tcgbenchmarks.replace.replace11.mainProcess(CCCCCCCCCCC)V.98.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.locate(C[CI)Z.20.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.224.TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.261.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.locate(C[CI)Z.12.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.323.TAKEN -----> false 
tcgbenchmarks.replace.replace11.esc([C)C.26.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.84.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.84.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.13.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.43.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.83.TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_set_2(C)Z.11.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.43.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.7.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.104.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.23.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.268.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.patsize([CI)I.32.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.225.TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_set_2(C)Z.3.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.10.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.172.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.64.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.77.TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.11.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.197.TAKEN -----> false 
tcgbenchmarks.replace.replace11.patsize([CI)I.88.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.71.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.277.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.354.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.stclose([CI)V.8.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.362.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.200.TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.15.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.261.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.231.TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.88.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.escSub([C)C.7.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.56.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.43.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.11.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.locate(C[CI)Z.20.TAKEN -----> false 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.57.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.88.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.212.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.507.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.13.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.173.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.3.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.146.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.32.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.96.TAKEN -----> true 
tcgbenchmarks.replace.replace11.escSub([C)C.66.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.491.TAKEN -----> false 
tcgbenchmarks.replace.replace11.stclose([CI)V.18.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.122.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.187.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makesub([C[C)I.34.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.458.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.64.TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.35.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.146.TAKEN -----> false 
tcgbenchmarks.replace.replace11.putsub([CII[C)V.20.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.151.TAKEN -----> false 
tcgbenchmarks.replace.replace11.escSub([C)C.7.TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.33.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.escSub([C)C.50.TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.128.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.320.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.change([C[C[C)V.33.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.12.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.349.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.173.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.77.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.3.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.64.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.27.TAKEN -----> true 
tcgbenchmarks.replace.replace11.mainProcess(CCCCCCCCCCC)V.98.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.109.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.521.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.320.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.78.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.35.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.182.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.76.TAKEN -----> false 
tcgbenchmarks.replace.replace11.change([C[C[C)V.9.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.227.TAKEN -----> true 
tcgbenchmarks.replace.replace11.escSub([C)C.26.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.305.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.189.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makesub([C[C)I.109.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.11.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.190.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.putsub([CII[C)V.7.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.esc([C)C.7.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.521.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.64.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.294.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.305.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.27.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.151.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.378.TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.77.TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.46.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.98.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.3.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.132.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.241.TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.51.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.37.TAKEN -----> false 
tcgbenchmarks.replace.replace11.patsize([CI)I.13.TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.57.TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.8.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.17.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.458.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.74.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.189.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.241.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.267.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.9.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.474.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_set_2(C)Z.3.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.404.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.507.TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.46.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.9.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_set_2(C)Z.19.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.182.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.349.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.23.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.248.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.51.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.51.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.83.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.60.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.7.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.190.TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.68.TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.43.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.esc([C)C.7.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.122.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.108.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.8.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.104.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.143.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.10.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.esc([C)C.66.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.128.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.12.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.248.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.71.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_set_2(C)Z.19.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.315.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.20.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.20.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.putsub([CII[C)V.7.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.224.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.103.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.404.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.491.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.34.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.84.TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.96.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.127.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.108.TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.27.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.16.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.109.TAKEN -----> true 
tcgbenchmarks.replace.replace11.esc([C)C.50.TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_set_2(C)Z.11.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.267.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.19.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.stclose([CI)V.8.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.197.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.patsize([CI)I.128.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.187.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.172.TAKEN -----> false 
tcgbenchmarks.replace.replace11.patsize([CI)I.128.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makesub([C[C)I.122.TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.32.TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.108.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.22.TAKEN -----> true 
tcgbenchmarks.replace.replace11.esc([C)C.66.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.117.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.96.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.88.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.35.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.474.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.32.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.225.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.206.TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.23.TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.27.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.51.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.122.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.isalnum(C)Z.17.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.isalnum(C)Z.31.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.98.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.23.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.change([C[C[C)V.77.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.78.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.323.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.19.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.103.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.231.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.19.TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.56.TAKEN -----> false 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.132.TAKEN -----> true 
tcgbenchmarks.replace.replace11.omatch([C[CI)Z.108.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.getccl([C[C)Z.23.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.117.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.378.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.294.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.354.TAKEN -----> false 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.22.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.200.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.96.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.27.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.268.TAKEN -----> false 
tcgbenchmarks.replace.replace11.makepat([C[C)I.172.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.escSub([C)C.50.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.isalnum(C)Z.31.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.in_pat_set(C)Z.27.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.patsize([CI)I.60.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.patsize([CI)I.32.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.206.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.makepat([C[C)I.109.NOT_TAKEN -----> true 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.135.TAKEN -----> true 
tcgbenchmarks.replace.replace11.makesub([C[C)I.23.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.112.TAKEN -----> false 
tcgbenchmarks.replace.replace11.change([C[C[C)V.9.TAKEN -----> true 
tcgbenchmarks.replace.replace11.dodash(C[C[C)V.68.NOT_TAKEN -----> false 
tcgbenchmarks.replace.replace11.amatch([C[CI)I.127.NOT_TAKEN -----> true 


====================================================== Method Sequences
[mainProcess('?','?','&','a','a','2','c','2','a','&','a')]
[mainProcess('?','?','@','a','a','2','c','2','a','&','a')]
[mainProcess('?','?','\u0000','a','a','2','c','2','a','&','a')]
[mainProcess('?','[','\u0000','a','a','2','c','2','a','&','a')]
[mainProcess('?','%','','a','a','2','c','2','a','&','a')]
[mainProcess('?','*','&','a','a','2','c','2','a','&','a')]
[mainProcess('?','耀','耀','a','a','2','c','2','a','&','a')]
[mainProcess('?','@','耀','a','a','2','c','2','a','&','a')]
[mainProcess('?','&','&','a','a','2','c','2','a','&','a')]
[mainProcess('?','$','耀','a','a','2','c','2','a','&','a')]
[mainProcess('[','^','\u0000','a','a','2','c','2','a','&','a')]
[mainProcess('[',' ','\u0000','a','a','2','c','2','a','&','a')]
[mainProcess('[','-','\u0000','a','a','2','c','2','a','&','a')]
[mainProcess('[',']','Ā','a','a','2','c','2','a','&','a')]
[mainProcess('%','?','￿','a','a','2','c','2','a','&','a')]
[mainProcess('%','*','\u0000','a','a','2','c','2','a','&','a')]
[mainProcess('%','\u0000','￿','a','a','2','c','2','a','&','a')]
[mainProcess('*','?','\b','a','a','2','c','2','a','&','a')]
[mainProcess('*','*','&','a','a','2','c','2','a','&','a')]
[mainProcess('$','?','','a','a','2','c','2','a','&','a')]
[mainProcess('c','*','￿','a','a','2','c','2','a','&','a')]
[mainProcess('@','c','&','a','a','2','c','2','a','&','a')]
[mainProcess('@','n','က','a','a','2','c','2','a','&','a')]
[mainProcess('@','t','Ȁ','a','a','2','c','2','a','&','a')]
[mainProcess('\u0000','\u0000','￿','a','a','2','c','2','a','&','a')]

====================================================== JUnit 4.0 test class
/*****IMPORTANT:If this is a static class, ensure to write a state resetting function and invoke it where necessary*******/
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class tcgbenchmarks_replace_replace11Test {

	private tcgbenchmarks.replace.replace11 tcgbenchmarks_replace_replace11;

	@Before
	public void setUp() throws Exception {
		tcgbenchmarks_replace_replace11 = new tcgbenchmarks.replace.replace11();
	}

	@Test
	public void test0() {
		tcgbenchmarks_replace_replace11.mainProcess('?','?','&','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test1() {
		tcgbenchmarks_replace_replace11.mainProcess('?','?','@','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test2() {
		tcgbenchmarks_replace_replace11.mainProcess('?','?','\u0000','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test3() {
		tcgbenchmarks_replace_replace11.mainProcess('?','[','\u0000','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test4() {
		tcgbenchmarks_replace_replace11.mainProcess('?','%','','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test5() {
		tcgbenchmarks_replace_replace11.mainProcess('?','*','&','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test6() {
		tcgbenchmarks_replace_replace11.mainProcess('?','耀','耀','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test7() {
		tcgbenchmarks_replace_replace11.mainProcess('?','@','耀','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test8() {
		tcgbenchmarks_replace_replace11.mainProcess('?','&','&','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test9() {
		tcgbenchmarks_replace_replace11.mainProcess('?','$','耀','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test10() {
		tcgbenchmarks_replace_replace11.mainProcess('[','^','\u0000','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test11() {
		tcgbenchmarks_replace_replace11.mainProcess('[',' ','\u0000','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test12() {
		tcgbenchmarks_replace_replace11.mainProcess('[','-','\u0000','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test13() {
		tcgbenchmarks_replace_replace11.mainProcess('[',']','Ā','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test14() {
		tcgbenchmarks_replace_replace11.mainProcess('%','?','￿','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test15() {
		tcgbenchmarks_replace_replace11.mainProcess('%','*','\u0000','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test16() {
		tcgbenchmarks_replace_replace11.mainProcess('%','\u0000','￿','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test17() {
		tcgbenchmarks_replace_replace11.mainProcess('*','?','\b','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test18() {
		tcgbenchmarks_replace_replace11.mainProcess('*','*','&','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test19() {
		tcgbenchmarks_replace_replace11.mainProcess('$','?','','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test20() {
		tcgbenchmarks_replace_replace11.mainProcess('c','*','￿','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test21() {
		tcgbenchmarks_replace_replace11.mainProcess('@','c','&','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test22() {
		tcgbenchmarks_replace_replace11.mainProcess('@','n','က','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test23() {
		tcgbenchmarks_replace_replace11.mainProcess('@','t','Ȁ','a','a','2','c','2','a','&','a');
	}

	@Test
	public void test24() {
		tcgbenchmarks_replace_replace11.mainProcess('\u0000','\u0000','￿','a','a','2','c','2','a','&','a');
	}
}

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:21:02
states:             new=17862,visited=0,backtracked=17862,end=224
search:             maxDepth=206,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=7833
heap:               new=524,released=3111,maxLive=355,gcCycles=6748
instructions:       172915
max memory:         2603MB
loaded code:        classes=61,methods=1302

====================================================== search finished: 1/10/22 3:34 PM
